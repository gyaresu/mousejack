                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Feb 24 2016) (Mac OS X x86_64)
                                      4 ; This file was generated Wed Feb 24 11:52:24 2016
                                      5 ;--------------------------------------------------------
                                      6 	.module radio
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _spi_transfer
                                     13 	.globl _memcpy
                                     14 	.globl _RFRDY
                                     15 	.globl _rfcsn
                                     16 	.globl _rfce
                                     17 	.globl _ien1
                                     18 	.globl _ien0
                                     19 	.globl _RFDAT
                                     20 	.globl _P0DIR
                                     21 	.globl _P0
                                     22 	.globl _usbcon
                                     23 	.globl _rfcon
                                     24 	.globl _rfctl
                                     25 	.globl _handle_radio_request_PARM_2
                                     26 	.globl _crc_update_PARM_3
                                     27 	.globl _crc_update_PARM_2
                                     28 	.globl _write_register_byte_PARM_2
                                     29 	.globl _spi_read_PARM_3
                                     30 	.globl _spi_read_PARM_2
                                     31 	.globl _spi_write_PARM_3
                                     32 	.globl _spi_write_PARM_2
                                     33 	.globl _configure_phy_PARM_3
                                     34 	.globl _configure_phy_PARM_2
                                     35 	.globl _configure_mac_PARM_3
                                     36 	.globl _configure_mac_PARM_2
                                     37 	.globl _configure_address_PARM_2
                                     38 	.globl _enter_promiscuous_mode_PARM_2
                                     39 	.globl _setupbuf
                                     40 	.globl _out1buf
                                     41 	.globl _in1buf
                                     42 	.globl _in0buf
                                     43 	.globl _enter_promiscuous_mode
                                     44 	.globl _configure_address
                                     45 	.globl _configure_mac
                                     46 	.globl _configure_phy
                                     47 	.globl _spi_write
                                     48 	.globl _spi_read
                                     49 	.globl _write_register_byte
                                     50 	.globl _crc_update
                                     51 	.globl _handle_radio_request
                                     52 ;--------------------------------------------------------
                                     53 ; special function registers
                                     54 ;--------------------------------------------------------
                                     55 	.area RSEG    (ABS,DATA)
      000000                         56 	.org 0x0000
                           0000E6    57 _rfctl	=	0x00e6
                           000090    58 _rfcon	=	0x0090
                           0000A0    59 _usbcon	=	0x00a0
                           000080    60 _P0	=	0x0080
                           000094    61 _P0DIR	=	0x0094
                           0000E5    62 _RFDAT	=	0x00e5
                           0000A8    63 _ien0	=	0x00a8
                           0000B8    64 _ien1	=	0x00b8
                                     65 ;--------------------------------------------------------
                                     66 ; special function bits
                                     67 ;--------------------------------------------------------
                                     68 	.area RSEG    (ABS,DATA)
      000000                         69 	.org 0x0000
                           000090    70 _rfce	=	0x0090
                           000091    71 _rfcsn	=	0x0091
                           0000C0    72 _RFRDY	=	0x00c0
                                     73 ;--------------------------------------------------------
                                     74 ; overlayable register banks
                                     75 ;--------------------------------------------------------
                                     76 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         77 	.ds 8
                                     78 ;--------------------------------------------------------
                                     79 ; internal ram data
                                     80 ;--------------------------------------------------------
                                     81 	.area DSEG    (DATA)
      000000                         82 _enter_promiscuous_mode_sloc0_1_0:
      000000                         83 	.ds 2
      000002                         84 _spi_read_sloc0_1_0:
      000002                         85 	.ds 3
      000005                         86 _handle_radio_request_sloc0_1_0:
      000005                         87 	.ds 2
      000007                         88 _handle_radio_request_sloc1_1_0:
      000007                         89 	.ds 2
                                     90 ;--------------------------------------------------------
                                     91 ; overlayable items in internal ram 
                                     92 ;--------------------------------------------------------
                                     93 ;--------------------------------------------------------
                                     94 ; indirectly addressable internal ram data
                                     95 ;--------------------------------------------------------
                                     96 	.area ISEG    (DATA)
                                     97 ;--------------------------------------------------------
                                     98 ; absolute internal ram data
                                     99 ;--------------------------------------------------------
                                    100 	.area IABS    (ABS,DATA)
                                    101 	.area IABS    (ABS,DATA)
                                    102 ;--------------------------------------------------------
                                    103 ; bit data
                                    104 ;--------------------------------------------------------
                                    105 	.area BSEG    (BIT)
      000000                        106 _configured:
      000000                        107 	.ds 1
                                    108 ;--------------------------------------------------------
                                    109 ; paged external ram data
                                    110 ;--------------------------------------------------------
                                    111 	.area PSEG    (PAG,XDATA)
                                    112 ;--------------------------------------------------------
                                    113 ; external ram data
                                    114 ;--------------------------------------------------------
                                    115 	.area XSEG    (XDATA)
                           00C700   116 _in0buf	=	0xc700
                           00C680   117 _in1buf	=	0xc680
                           00C640   118 _out1buf	=	0xc640
                           00C7E8   119 _setupbuf	=	0xc7e8
      000000                        120 _in_pm:
      000000                        121 	.ds 1
      000001                        122 _pm_prefix_length:
      000001                        123 	.ds 2
      000003                        124 _pm_prefix:
      000003                        125 	.ds 5
      000008                        126 _enter_promiscuous_mode_PARM_2:
      000008                        127 	.ds 1
      000009                        128 _enter_promiscuous_mode_prefix_1_32:
      000009                        129 	.ds 3
      00000C                        130 _enter_promiscuous_mode_address_2_34:
      00000C                        131 	.ds 2
      00000E                        132 _configure_address_PARM_2:
      00000E                        133 	.ds 1
      00000F                        134 _configure_address_address_1_35:
      00000F                        135 	.ds 3
      000012                        136 _configure_mac_PARM_2:
      000012                        137 	.ds 1
      000013                        138 _configure_mac_PARM_3:
      000013                        139 	.ds 1
      000014                        140 _configure_mac_feature_1_37:
      000014                        141 	.ds 1
      000015                        142 _configure_phy_PARM_2:
      000015                        143 	.ds 1
      000016                        144 _configure_phy_PARM_3:
      000016                        145 	.ds 1
      000017                        146 _configure_phy_config_1_39:
      000017                        147 	.ds 1
      000018                        148 _spi_transfer_byte_1_41:
      000018                        149 	.ds 1
      000019                        150 _spi_write_PARM_2:
      000019                        151 	.ds 3
      00001C                        152 _spi_write_PARM_3:
      00001C                        153 	.ds 1
      00001D                        154 _spi_write_command_1_43:
      00001D                        155 	.ds 1
      00001E                        156 _spi_read_PARM_2:
      00001E                        157 	.ds 3
      000021                        158 _spi_read_PARM_3:
      000021                        159 	.ds 1
      000022                        160 _spi_read_command_1_45:
      000022                        161 	.ds 1
      000023                        162 _write_register_byte_PARM_2:
      000023                        163 	.ds 1
      000024                        164 _write_register_byte_reg_1_47:
      000024                        165 	.ds 1
      000025                        166 _crc_update_PARM_2:
      000025                        167 	.ds 1
      000026                        168 _crc_update_PARM_3:
      000026                        169 	.ds 1
      000027                        170 _crc_update_crc_1_49:
      000027                        171 	.ds 2
      000029                        172 _handle_radio_request_PARM_2:
      000029                        173 	.ds 3
      00002C                        174 _handle_radio_request_request_1_51:
      00002C                        175 	.ds 1
      00002D                        176 _handle_radio_request_value_2_58:
      00002D                        177 	.ds 1
      00002E                        178 _handle_radio_request_crc_4_63:
      00002E                        179 	.ds 2
      000030                        180 _handle_radio_request_crc_given_4_63:
      000030                        181 	.ds 2
      000032                        182 _handle_radio_request_payload_4_63:
      000032                        183 	.ds 37
                                    184 ;--------------------------------------------------------
                                    185 ; absolute external ram data
                                    186 ;--------------------------------------------------------
                                    187 	.area XABS    (ABS,XDATA)
                                    188 ;--------------------------------------------------------
                                    189 ; external initialized ram data
                                    190 ;--------------------------------------------------------
                                    191 	.area XISEG   (XDATA)
      000000                        192 _bootloader:
      000000                        193 	.ds 2
      000002                        194 _promiscuous_address:
      000002                        195 	.ds 2
                                    196 	.area HOME    (CODE)
                                    197 	.area GSINIT0 (CODE)
                                    198 	.area GSINIT1 (CODE)
                                    199 	.area GSINIT2 (CODE)
                                    200 	.area GSINIT3 (CODE)
                                    201 	.area GSINIT4 (CODE)
                                    202 	.area GSINIT5 (CODE)
                                    203 	.area GSINIT  (CODE)
                                    204 	.area GSFINAL (CODE)
                                    205 	.area CSEG    (CODE)
                                    206 ;--------------------------------------------------------
                                    207 ; global & static initialisations
                                    208 ;--------------------------------------------------------
                                    209 	.area HOME    (CODE)
                                    210 	.area GSINIT  (CODE)
                                    211 	.area GSFINAL (CODE)
                                    212 	.area GSINIT  (CODE)
                                    213 ;--------------------------------------------------------
                                    214 ; Home
                                    215 ;--------------------------------------------------------
                                    216 	.area HOME    (CODE)
                                    217 	.area HOME    (CODE)
                                    218 ;--------------------------------------------------------
                                    219 ; code
                                    220 ;--------------------------------------------------------
                                    221 	.area CSEG    (CODE)
                                    222 ;------------------------------------------------------------
                                    223 ;Allocation info for local variables in function 'enter_promiscuous_mode'
                                    224 ;------------------------------------------------------------
                                    225 ;sloc0                     Allocated with name '_enter_promiscuous_mode_sloc0_1_0'
                                    226 ;prefix_length             Allocated with name '_enter_promiscuous_mode_PARM_2'
                                    227 ;prefix                    Allocated with name '_enter_promiscuous_mode_prefix_1_32'
                                    228 ;x                         Allocated with name '_enter_promiscuous_mode_x_1_33'
                                    229 ;address                   Allocated with name '_enter_promiscuous_mode_address_2_34'
                                    230 ;------------------------------------------------------------
                                    231 ;	src/radio.c:9: void enter_promiscuous_mode(uint8_t * prefix, uint8_t prefix_length)
                                    232 ;	-----------------------------------------
                                    233 ;	 function enter_promiscuous_mode
                                    234 ;	-----------------------------------------
      000000                        235 _enter_promiscuous_mode:
                           000007   236 	ar7 = 0x07
                           000006   237 	ar6 = 0x06
                           000005   238 	ar5 = 0x05
                           000004   239 	ar4 = 0x04
                           000003   240 	ar3 = 0x03
                           000002   241 	ar2 = 0x02
                           000001   242 	ar1 = 0x01
                           000000   243 	ar0 = 0x00
      000000 AF F0            [24]  244 	mov	r7,b
      000002 AE 83            [24]  245 	mov	r6,dph
      000004 E5 82            [12]  246 	mov	a,dpl
      000006 90r00r09         [24]  247 	mov	dptr,#_enter_promiscuous_mode_prefix_1_32
      000009 F0               [24]  248 	movx	@dptr,a
      00000A EE               [12]  249 	mov	a,r6
      00000B A3               [24]  250 	inc	dptr
      00000C F0               [24]  251 	movx	@dptr,a
      00000D EF               [12]  252 	mov	a,r7
      00000E A3               [24]  253 	inc	dptr
      00000F F0               [24]  254 	movx	@dptr,a
                                    255 ;	src/radio.c:13: for(x = 0; x < prefix_length; x++) pm_prefix[prefix_length - 1 - x] = prefix[x];
      000010 90r00r09         [24]  256 	mov	dptr,#_enter_promiscuous_mode_prefix_1_32
      000013 E0               [24]  257 	movx	a,@dptr
      000014 FD               [12]  258 	mov	r5,a
      000015 A3               [24]  259 	inc	dptr
      000016 E0               [24]  260 	movx	a,@dptr
      000017 FE               [12]  261 	mov	r6,a
      000018 A3               [24]  262 	inc	dptr
      000019 E0               [24]  263 	movx	a,@dptr
      00001A FF               [12]  264 	mov	r7,a
      00001B 90r00r08         [24]  265 	mov	dptr,#_enter_promiscuous_mode_PARM_2
      00001E E0               [24]  266 	movx	a,@dptr
      00001F FC               [12]  267 	mov	r4,a
      000020 7A 00            [12]  268 	mov	r2,#0x00
      000022 7B 00            [12]  269 	mov	r3,#0x00
      000024                        270 00109$:
      000024 8C 00            [24]  271 	mov	ar0,r4
      000026 79 00            [12]  272 	mov	r1,#0x00
      000028 C3               [12]  273 	clr	c
      000029 EA               [12]  274 	mov	a,r2
      00002A 98               [12]  275 	subb	a,r0
      00002B EB               [12]  276 	mov	a,r3
      00002C 64 80            [12]  277 	xrl	a,#0x80
      00002E 89 F0            [24]  278 	mov	b,r1
      000030 63 F0 80         [24]  279 	xrl	b,#0x80
      000033 95 F0            [12]  280 	subb	a,b
      000035 50 33            [24]  281 	jnc	00101$
      000037 EC               [12]  282 	mov	a,r4
      000038 14               [12]  283 	dec	a
      000039 8A 00            [24]  284 	mov	ar0,r2
      00003B C3               [12]  285 	clr	c
      00003C 98               [12]  286 	subb	a,r0
      00003D 24r03            [12]  287 	add	a,#_pm_prefix
      00003F F5*00            [12]  288 	mov	_enter_promiscuous_mode_sloc0_1_0,a
      000041 E4               [12]  289 	clr	a
      000042 34s00            [12]  290 	addc	a,#(_pm_prefix >> 8)
      000044 F5*01            [12]  291 	mov	(_enter_promiscuous_mode_sloc0_1_0 + 1),a
      000046 C0 04            [24]  292 	push	ar4
      000048 EA               [12]  293 	mov	a,r2
      000049 2D               [12]  294 	add	a,r5
      00004A F8               [12]  295 	mov	r0,a
      00004B EB               [12]  296 	mov	a,r3
      00004C 3E               [12]  297 	addc	a,r6
      00004D F9               [12]  298 	mov	r1,a
      00004E 8F 04            [24]  299 	mov	ar4,r7
      000050 88 82            [24]  300 	mov	dpl,r0
      000052 89 83            [24]  301 	mov	dph,r1
      000054 8C F0            [24]  302 	mov	b,r4
      000056 12r00r00         [24]  303 	lcall	__gptrget
      000059 F8               [12]  304 	mov	r0,a
      00005A 85*00 82         [24]  305 	mov	dpl,_enter_promiscuous_mode_sloc0_1_0
      00005D 85*01 83         [24]  306 	mov	dph,(_enter_promiscuous_mode_sloc0_1_0 + 1)
      000060 F0               [24]  307 	movx	@dptr,a
      000061 0A               [12]  308 	inc	r2
      000062 BA 00 01         [24]  309 	cjne	r2,#0x00,00137$
      000065 0B               [12]  310 	inc	r3
      000066                        311 00137$:
      000066 D0 04            [24]  312 	pop	ar4
      000068 80 BA            [24]  313 	sjmp	00109$
      00006A                        314 00101$:
                                    315 ;	src/radio.c:14: pm_prefix_length = prefix_length > 5 ? 5 : prefix_length;
      00006A EC               [12]  316 	mov	a,r4
      00006B 24 FA            [12]  317 	add	a,#0xff - 0x05
      00006D 50 04            [24]  318 	jnc	00113$
      00006F 7F 05            [12]  319 	mov	r7,#0x05
      000071 80 02            [24]  320 	sjmp	00114$
      000073                        321 00113$:
      000073 8C 07            [24]  322 	mov	ar7,r4
      000075                        323 00114$:
      000075 90r00r01         [24]  324 	mov	dptr,#_pm_prefix_length
      000078 EF               [12]  325 	mov	a,r7
      000079 F0               [24]  326 	movx	@dptr,a
      00007A E4               [12]  327 	clr	a
      00007B A3               [24]  328 	inc	dptr
      00007C F0               [24]  329 	movx	@dptr,a
                                    330 ;	src/radio.c:15: in_pm = true;
      00007D 90r00r00         [24]  331 	mov	dptr,#_in_pm
      000080 04               [12]  332 	inc	a
      000081 F0               [24]  333 	movx	@dptr,a
                                    334 ;	src/radio.c:18: rfce = 0;
      000082 C2 90            [12]  335 	clr	_rfce
                                    336 ;	src/radio.c:21: write_register_byte(EN_RXADDR, ENRX_P0);
      000084 90r00r23         [24]  337 	mov	dptr,#_write_register_byte_PARM_2
      000087 74 01            [12]  338 	mov	a,#0x01
      000089 F0               [24]  339 	movx	@dptr,a
      00008A 75 82 02         [24]  340 	mov	dpl,#0x02
      00008D 12r02rE8         [24]  341 	lcall	_write_register_byte
                                    342 ;	src/radio.c:24: if(pm_prefix_length == 0) configure_address(promiscuous_address, 2);
      000090 90r00r01         [24]  343 	mov	dptr,#_pm_prefix_length
      000093 E0               [24]  344 	movx	a,@dptr
      000094 FE               [12]  345 	mov	r6,a
      000095 A3               [24]  346 	inc	dptr
      000096 E0               [24]  347 	movx	a,@dptr
      000097 FF               [12]  348 	mov	r7,a
      000098 4E               [12]  349 	orl	a,r6
      000099 70 11            [24]  350 	jnz	00106$
      00009B 90r00r0E         [24]  351 	mov	dptr,#_configure_address_PARM_2
      00009E 74 02            [12]  352 	mov	a,#0x02
      0000A0 F0               [24]  353 	movx	@dptr,a
      0000A1 90r00r02         [24]  354 	mov	dptr,#_promiscuous_address
      0000A4 75 F0 00         [24]  355 	mov	b,#0x00
      0000A7 12r01r18         [24]  356 	lcall	_configure_address
      0000AA 80 43            [24]  357 	sjmp	00107$
      0000AC                        358 00106$:
                                    359 ;	src/radio.c:27: else if(pm_prefix_length == 1)
      0000AC BE 01 32         [24]  360 	cjne	r6,#0x01,00103$
      0000AF BF 00 2F         [24]  361 	cjne	r7,#0x00,00103$
                                    362 ;	src/radio.c:29: uint8_t address[2] = { pm_prefix[0], (pm_prefix[0] & 0x80) == 0x80 ? 0xAA : 0x55 };
      0000B2 90r00r03         [24]  363 	mov	dptr,#_pm_prefix
      0000B5 E0               [24]  364 	movx	a,@dptr
      0000B6 90r00r0C         [24]  365 	mov	dptr,#_enter_promiscuous_mode_address_2_34
      0000B9 F0               [24]  366 	movx	@dptr,a
      0000BA 90r00r03         [24]  367 	mov	dptr,#_pm_prefix
      0000BD E0               [24]  368 	movx	a,@dptr
      0000BE FD               [12]  369 	mov	r5,a
      0000BF 53 05 80         [24]  370 	anl	ar5,#0x80
      0000C2 BD 80 04         [24]  371 	cjne	r5,#0x80,00115$
      0000C5 7D AA            [12]  372 	mov	r5,#0xAA
      0000C7 80 02            [24]  373 	sjmp	00116$
      0000C9                        374 00115$:
      0000C9 7D 55            [12]  375 	mov	r5,#0x55
      0000CB                        376 00116$:
      0000CB 90r00r0D         [24]  377 	mov	dptr,#(_enter_promiscuous_mode_address_2_34 + 0x0001)
      0000CE ED               [12]  378 	mov	a,r5
      0000CF F0               [24]  379 	movx	@dptr,a
                                    380 ;	src/radio.c:30: configure_address(address, 2);
      0000D0 90r00r0E         [24]  381 	mov	dptr,#_configure_address_PARM_2
      0000D3 74 02            [12]  382 	mov	a,#0x02
      0000D5 F0               [24]  383 	movx	@dptr,a
      0000D6 90r00r0C         [24]  384 	mov	dptr,#_enter_promiscuous_mode_address_2_34
      0000D9 75 F0 00         [24]  385 	mov	b,#0x00
      0000DC 12r01r18         [24]  386 	lcall	_configure_address
      0000DF 80 0E            [24]  387 	sjmp	00107$
      0000E1                        388 00103$:
                                    389 ;	src/radio.c:34: else configure_address(pm_prefix, pm_prefix_length);
      0000E1 90r00r0E         [24]  390 	mov	dptr,#_configure_address_PARM_2
      0000E4 EE               [12]  391 	mov	a,r6
      0000E5 F0               [24]  392 	movx	@dptr,a
      0000E6 90r00r03         [24]  393 	mov	dptr,#_pm_prefix
      0000E9 75 F0 00         [24]  394 	mov	b,#0x00
      0000EC 12r01r18         [24]  395 	lcall	_configure_address
      0000EF                        396 00107$:
                                    397 ;	src/radio.c:37: configure_mac(0, 0, ENAA_NONE);
      0000EF 90r00r12         [24]  398 	mov	dptr,#_configure_mac_PARM_2
      0000F2 E4               [12]  399 	clr	a
      0000F3 F0               [24]  400 	movx	@dptr,a
      0000F4 90r00r13         [24]  401 	mov	dptr,#_configure_mac_PARM_3
      0000F7 F0               [24]  402 	movx	@dptr,a
      0000F8 75 82 00         [24]  403 	mov	dpl,#0x00
      0000FB 12r01r8F         [24]  404 	lcall	_configure_mac
                                    405 ;	src/radio.c:40: configure_phy(PRIM_RX | PWR_UP, RATE_2M, 32);
      0000FE 90r00r15         [24]  406 	mov	dptr,#_configure_phy_PARM_2
      000101 74 08            [12]  407 	mov	a,#0x08
      000103 F0               [24]  408 	movx	@dptr,a
      000104 90r00r16         [24]  409 	mov	dptr,#_configure_phy_PARM_3
      000107 74 20            [12]  410 	mov	a,#0x20
      000109 F0               [24]  411 	movx	@dptr,a
      00010A 75 82 03         [24]  412 	mov	dpl,#0x03
      00010D 12r01rBC         [24]  413 	lcall	_configure_phy
                                    414 ;	src/radio.c:43: rfce = 1;
      000110 D2 90            [12]  415 	setb	_rfce
                                    416 ;	src/radio.c:44: in1bc = 0;
      000112 90 C7 B7         [24]  417 	mov	dptr,#0xC7B7
      000115 E4               [12]  418 	clr	a
      000116 F0               [24]  419 	movx	@dptr,a
      000117 22               [24]  420 	ret
                                    421 ;------------------------------------------------------------
                                    422 ;Allocation info for local variables in function 'configure_address'
                                    423 ;------------------------------------------------------------
                                    424 ;length                    Allocated with name '_configure_address_PARM_2'
                                    425 ;address                   Allocated with name '_configure_address_address_1_35'
                                    426 ;------------------------------------------------------------
                                    427 ;	src/radio.c:48: void configure_address(uint8_t * address, uint8_t length)
                                    428 ;	-----------------------------------------
                                    429 ;	 function configure_address
                                    430 ;	-----------------------------------------
      000118                        431 _configure_address:
      000118 AF F0            [24]  432 	mov	r7,b
      00011A AE 83            [24]  433 	mov	r6,dph
      00011C E5 82            [12]  434 	mov	a,dpl
      00011E 90r00r0F         [24]  435 	mov	dptr,#_configure_address_address_1_35
      000121 F0               [24]  436 	movx	@dptr,a
      000122 EE               [12]  437 	mov	a,r6
      000123 A3               [24]  438 	inc	dptr
      000124 F0               [24]  439 	movx	@dptr,a
      000125 EF               [12]  440 	mov	a,r7
      000126 A3               [24]  441 	inc	dptr
      000127 F0               [24]  442 	movx	@dptr,a
                                    443 ;	src/radio.c:50: write_register_byte(EN_RXADDR, ENRX_P0);
      000128 90r00r23         [24]  444 	mov	dptr,#_write_register_byte_PARM_2
      00012B 74 01            [12]  445 	mov	a,#0x01
      00012D F0               [24]  446 	movx	@dptr,a
      00012E 75 82 02         [24]  447 	mov	dpl,#0x02
      000131 12r02rE8         [24]  448 	lcall	_write_register_byte
                                    449 ;	src/radio.c:51: write_register_byte(SETUP_AW, length - 2);
      000134 90r00r0E         [24]  450 	mov	dptr,#_configure_address_PARM_2
      000137 E0               [24]  451 	movx	a,@dptr
      000138 FF               [12]  452 	mov	r7,a
      000139 24 FE            [12]  453 	add	a,#0xFE
      00013B 90r00r23         [24]  454 	mov	dptr,#_write_register_byte_PARM_2
      00013E F0               [24]  455 	movx	@dptr,a
      00013F 75 82 03         [24]  456 	mov	dpl,#0x03
      000142 C0 07            [24]  457 	push	ar7
      000144 12r02rE8         [24]  458 	lcall	_write_register_byte
      000147 D0 07            [24]  459 	pop	ar7
                                    460 ;	src/radio.c:52: write_register(TX_ADDR, address, length);
      000149 90r00r0F         [24]  461 	mov	dptr,#_configure_address_address_1_35
      00014C E0               [24]  462 	movx	a,@dptr
      00014D FC               [12]  463 	mov	r4,a
      00014E A3               [24]  464 	inc	dptr
      00014F E0               [24]  465 	movx	a,@dptr
      000150 FD               [12]  466 	mov	r5,a
      000151 A3               [24]  467 	inc	dptr
      000152 E0               [24]  468 	movx	a,@dptr
      000153 FE               [12]  469 	mov	r6,a
      000154 90r00r19         [24]  470 	mov	dptr,#_spi_write_PARM_2
      000157 EC               [12]  471 	mov	a,r4
      000158 F0               [24]  472 	movx	@dptr,a
      000159 ED               [12]  473 	mov	a,r5
      00015A A3               [24]  474 	inc	dptr
      00015B F0               [24]  475 	movx	@dptr,a
      00015C EE               [12]  476 	mov	a,r6
      00015D A3               [24]  477 	inc	dptr
      00015E F0               [24]  478 	movx	@dptr,a
      00015F 90r00r1C         [24]  479 	mov	dptr,#_spi_write_PARM_3
      000162 EF               [12]  480 	mov	a,r7
      000163 F0               [24]  481 	movx	@dptr,a
      000164 75 82 30         [24]  482 	mov	dpl,#0x30
      000167 C0 07            [24]  483 	push	ar7
      000169 12r01rFB         [24]  484 	lcall	_spi_write
      00016C D0 07            [24]  485 	pop	ar7
                                    486 ;	src/radio.c:53: write_register(RX_ADDR_P0, address, length);  
      00016E 90r00r0F         [24]  487 	mov	dptr,#_configure_address_address_1_35
      000171 E0               [24]  488 	movx	a,@dptr
      000172 FC               [12]  489 	mov	r4,a
      000173 A3               [24]  490 	inc	dptr
      000174 E0               [24]  491 	movx	a,@dptr
      000175 FD               [12]  492 	mov	r5,a
      000176 A3               [24]  493 	inc	dptr
      000177 E0               [24]  494 	movx	a,@dptr
      000178 FE               [12]  495 	mov	r6,a
      000179 90r00r19         [24]  496 	mov	dptr,#_spi_write_PARM_2
      00017C EC               [12]  497 	mov	a,r4
      00017D F0               [24]  498 	movx	@dptr,a
      00017E ED               [12]  499 	mov	a,r5
      00017F A3               [24]  500 	inc	dptr
      000180 F0               [24]  501 	movx	@dptr,a
      000181 EE               [12]  502 	mov	a,r6
      000182 A3               [24]  503 	inc	dptr
      000183 F0               [24]  504 	movx	@dptr,a
      000184 90r00r1C         [24]  505 	mov	dptr,#_spi_write_PARM_3
      000187 EF               [12]  506 	mov	a,r7
      000188 F0               [24]  507 	movx	@dptr,a
      000189 75 82 2A         [24]  508 	mov	dpl,#0x2A
      00018C 02r01rFB         [24]  509 	ljmp	_spi_write
                                    510 ;------------------------------------------------------------
                                    511 ;Allocation info for local variables in function 'configure_mac'
                                    512 ;------------------------------------------------------------
                                    513 ;dynpd                     Allocated with name '_configure_mac_PARM_2'
                                    514 ;en_aa                     Allocated with name '_configure_mac_PARM_3'
                                    515 ;feature                   Allocated with name '_configure_mac_feature_1_37'
                                    516 ;------------------------------------------------------------
                                    517 ;	src/radio.c:57: void configure_mac(uint8_t feature, uint8_t dynpd, uint8_t en_aa)
                                    518 ;	-----------------------------------------
                                    519 ;	 function configure_mac
                                    520 ;	-----------------------------------------
      00018F                        521 _configure_mac:
      00018F E5 82            [12]  522 	mov	a,dpl
      000191 90r00r14         [24]  523 	mov	dptr,#_configure_mac_feature_1_37
      000194 F0               [24]  524 	movx	@dptr,a
                                    525 ;	src/radio.c:59: write_register_byte(FEATURE, feature);
      000195 E0               [24]  526 	movx	a,@dptr
      000196 90r00r23         [24]  527 	mov	dptr,#_write_register_byte_PARM_2
      000199 F0               [24]  528 	movx	@dptr,a
      00019A 75 82 1D         [24]  529 	mov	dpl,#0x1D
      00019D 12r02rE8         [24]  530 	lcall	_write_register_byte
                                    531 ;	src/radio.c:60: write_register_byte(DYNPD, dynpd);
      0001A0 90r00r12         [24]  532 	mov	dptr,#_configure_mac_PARM_2
      0001A3 E0               [24]  533 	movx	a,@dptr
      0001A4 90r00r23         [24]  534 	mov	dptr,#_write_register_byte_PARM_2
      0001A7 F0               [24]  535 	movx	@dptr,a
      0001A8 75 82 1C         [24]  536 	mov	dpl,#0x1C
      0001AB 12r02rE8         [24]  537 	lcall	_write_register_byte
                                    538 ;	src/radio.c:61: write_register_byte(EN_AA, en_aa);  
      0001AE 90r00r13         [24]  539 	mov	dptr,#_configure_mac_PARM_3
      0001B1 E0               [24]  540 	movx	a,@dptr
      0001B2 90r00r23         [24]  541 	mov	dptr,#_write_register_byte_PARM_2
      0001B5 F0               [24]  542 	movx	@dptr,a
      0001B6 75 82 01         [24]  543 	mov	dpl,#0x01
      0001B9 02r02rE8         [24]  544 	ljmp	_write_register_byte
                                    545 ;------------------------------------------------------------
                                    546 ;Allocation info for local variables in function 'configure_phy'
                                    547 ;------------------------------------------------------------
                                    548 ;rf_setup                  Allocated with name '_configure_phy_PARM_2'
                                    549 ;rx_pw                     Allocated with name '_configure_phy_PARM_3'
                                    550 ;config                    Allocated with name '_configure_phy_config_1_39'
                                    551 ;------------------------------------------------------------
                                    552 ;	src/radio.c:65: void configure_phy(uint8_t config, uint8_t rf_setup, uint8_t rx_pw)
                                    553 ;	-----------------------------------------
                                    554 ;	 function configure_phy
                                    555 ;	-----------------------------------------
      0001BC                        556 _configure_phy:
      0001BC E5 82            [12]  557 	mov	a,dpl
      0001BE 90r00r17         [24]  558 	mov	dptr,#_configure_phy_config_1_39
      0001C1 F0               [24]  559 	movx	@dptr,a
                                    560 ;	src/radio.c:67: write_register_byte(CONFIG, config);
      0001C2 E0               [24]  561 	movx	a,@dptr
      0001C3 90r00r23         [24]  562 	mov	dptr,#_write_register_byte_PARM_2
      0001C6 F0               [24]  563 	movx	@dptr,a
      0001C7 75 82 00         [24]  564 	mov	dpl,#0x00
      0001CA 12r02rE8         [24]  565 	lcall	_write_register_byte
                                    566 ;	src/radio.c:68: write_register_byte(RF_SETUP, rf_setup);
      0001CD 90r00r15         [24]  567 	mov	dptr,#_configure_phy_PARM_2
      0001D0 E0               [24]  568 	movx	a,@dptr
      0001D1 90r00r23         [24]  569 	mov	dptr,#_write_register_byte_PARM_2
      0001D4 F0               [24]  570 	movx	@dptr,a
      0001D5 75 82 06         [24]  571 	mov	dpl,#0x06
      0001D8 12r02rE8         [24]  572 	lcall	_write_register_byte
                                    573 ;	src/radio.c:69: write_register_byte(RX_PW_P0, rx_pw);
      0001DB 90r00r16         [24]  574 	mov	dptr,#_configure_phy_PARM_3
      0001DE E0               [24]  575 	movx	a,@dptr
      0001DF 90r00r23         [24]  576 	mov	dptr,#_write_register_byte_PARM_2
      0001E2 F0               [24]  577 	movx	@dptr,a
      0001E3 75 82 11         [24]  578 	mov	dpl,#0x11
      0001E6 02r02rE8         [24]  579 	ljmp	_write_register_byte
                                    580 ;------------------------------------------------------------
                                    581 ;Allocation info for local variables in function 'spi_transfer'
                                    582 ;------------------------------------------------------------
                                    583 ;byte                      Allocated with name '_spi_transfer_byte_1_41'
                                    584 ;------------------------------------------------------------
                                    585 ;	src/radio.c:73: uint8_t spi_transfer(uint8_t byte)
                                    586 ;	-----------------------------------------
                                    587 ;	 function spi_transfer
                                    588 ;	-----------------------------------------
      0001E9                        589 _spi_transfer:
      0001E9 E5 82            [12]  590 	mov	a,dpl
      0001EB 90r00r18         [24]  591 	mov	dptr,#_spi_transfer_byte_1_41
      0001EE F0               [24]  592 	movx	@dptr,a
                                    593 ;	src/radio.c:75: RFDAT = byte;
      0001EF E0               [24]  594 	movx	a,@dptr
      0001F0 F5 E5            [12]  595 	mov	_RFDAT,a
                                    596 ;	src/radio.c:76: RFRDY = 0;
      0001F2 C2 C0            [12]  597 	clr	_RFRDY
                                    598 ;	src/radio.c:77: while(!RFRDY);
      0001F4                        599 00101$:
      0001F4 30 C0 FD         [24]  600 	jnb	_RFRDY,00101$
                                    601 ;	src/radio.c:78: return RFDAT;
      0001F7 85 E5 82         [24]  602 	mov	dpl,_RFDAT
      0001FA 22               [24]  603 	ret
                                    604 ;------------------------------------------------------------
                                    605 ;Allocation info for local variables in function 'spi_write'
                                    606 ;------------------------------------------------------------
                                    607 ;buffer                    Allocated with name '_spi_write_PARM_2'
                                    608 ;length                    Allocated with name '_spi_write_PARM_3'
                                    609 ;command                   Allocated with name '_spi_write_command_1_43'
                                    610 ;x                         Allocated with name '_spi_write_x_1_44'
                                    611 ;------------------------------------------------------------
                                    612 ;	src/radio.c:82: void spi_write(uint8_t command, uint8_t * buffer, uint8_t length)
                                    613 ;	-----------------------------------------
                                    614 ;	 function spi_write
                                    615 ;	-----------------------------------------
      0001FB                        616 _spi_write:
      0001FB E5 82            [12]  617 	mov	a,dpl
      0001FD 90r00r1D         [24]  618 	mov	dptr,#_spi_write_command_1_43
      000200 F0               [24]  619 	movx	@dptr,a
                                    620 ;	src/radio.c:85: rfcsn = 0;
      000201 C2 91            [12]  621 	clr	_rfcsn
                                    622 ;	src/radio.c:86: spi_transfer(command);
      000203 90r00r1D         [24]  623 	mov	dptr,#_spi_write_command_1_43
      000206 E0               [24]  624 	movx	a,@dptr
      000207 F5 82            [12]  625 	mov	dpl,a
      000209 12r01rE9         [24]  626 	lcall	_spi_transfer
                                    627 ;	src/radio.c:87: for(x = 0; x < length; x++) spi_transfer(buffer[x]);
      00020C 90r00r19         [24]  628 	mov	dptr,#_spi_write_PARM_2
      00020F E0               [24]  629 	movx	a,@dptr
      000210 FD               [12]  630 	mov	r5,a
      000211 A3               [24]  631 	inc	dptr
      000212 E0               [24]  632 	movx	a,@dptr
      000213 FE               [12]  633 	mov	r6,a
      000214 A3               [24]  634 	inc	dptr
      000215 E0               [24]  635 	movx	a,@dptr
      000216 FF               [12]  636 	mov	r7,a
      000217 90r00r1C         [24]  637 	mov	dptr,#_spi_write_PARM_3
      00021A E0               [24]  638 	movx	a,@dptr
      00021B FC               [12]  639 	mov	r4,a
      00021C 7A 00            [12]  640 	mov	r2,#0x00
      00021E 7B 00            [12]  641 	mov	r3,#0x00
      000220                        642 00103$:
      000220 8C 00            [24]  643 	mov	ar0,r4
      000222 79 00            [12]  644 	mov	r1,#0x00
      000224 C3               [12]  645 	clr	c
      000225 EA               [12]  646 	mov	a,r2
      000226 98               [12]  647 	subb	a,r0
      000227 EB               [12]  648 	mov	a,r3
      000228 64 80            [12]  649 	xrl	a,#0x80
      00022A 89 F0            [24]  650 	mov	b,r1
      00022C 63 F0 80         [24]  651 	xrl	b,#0x80
      00022F 95 F0            [12]  652 	subb	a,b
      000231 50 39            [24]  653 	jnc	00101$
      000233 C0 04            [24]  654 	push	ar4
      000235 EA               [12]  655 	mov	a,r2
      000236 2D               [12]  656 	add	a,r5
      000237 F8               [12]  657 	mov	r0,a
      000238 EB               [12]  658 	mov	a,r3
      000239 3E               [12]  659 	addc	a,r6
      00023A F9               [12]  660 	mov	r1,a
      00023B 8F 04            [24]  661 	mov	ar4,r7
      00023D 88 82            [24]  662 	mov	dpl,r0
      00023F 89 83            [24]  663 	mov	dph,r1
      000241 8C F0            [24]  664 	mov	b,r4
      000243 12r00r00         [24]  665 	lcall	__gptrget
      000246 F5 82            [12]  666 	mov	dpl,a
      000248 C0 07            [24]  667 	push	ar7
      00024A C0 06            [24]  668 	push	ar6
      00024C C0 05            [24]  669 	push	ar5
      00024E C0 04            [24]  670 	push	ar4
      000250 C0 03            [24]  671 	push	ar3
      000252 C0 02            [24]  672 	push	ar2
      000254 12r01rE9         [24]  673 	lcall	_spi_transfer
      000257 D0 02            [24]  674 	pop	ar2
      000259 D0 03            [24]  675 	pop	ar3
      00025B D0 04            [24]  676 	pop	ar4
      00025D D0 05            [24]  677 	pop	ar5
      00025F D0 06            [24]  678 	pop	ar6
      000261 D0 07            [24]  679 	pop	ar7
      000263 0A               [12]  680 	inc	r2
      000264 BA 00 01         [24]  681 	cjne	r2,#0x00,00115$
      000267 0B               [12]  682 	inc	r3
      000268                        683 00115$:
      000268 D0 04            [24]  684 	pop	ar4
      00026A 80 B4            [24]  685 	sjmp	00103$
      00026C                        686 00101$:
                                    687 ;	src/radio.c:88: rfcsn = 1;  
      00026C D2 91            [12]  688 	setb	_rfcsn
      00026E 22               [24]  689 	ret
                                    690 ;------------------------------------------------------------
                                    691 ;Allocation info for local variables in function 'spi_read'
                                    692 ;------------------------------------------------------------
                                    693 ;sloc0                     Allocated with name '_spi_read_sloc0_1_0'
                                    694 ;buffer                    Allocated with name '_spi_read_PARM_2'
                                    695 ;length                    Allocated with name '_spi_read_PARM_3'
                                    696 ;command                   Allocated with name '_spi_read_command_1_45'
                                    697 ;x                         Allocated with name '_spi_read_x_1_46'
                                    698 ;------------------------------------------------------------
                                    699 ;	src/radio.c:92: void spi_read(uint8_t command, uint8_t * buffer, uint8_t length)
                                    700 ;	-----------------------------------------
                                    701 ;	 function spi_read
                                    702 ;	-----------------------------------------
      00026F                        703 _spi_read:
      00026F E5 82            [12]  704 	mov	a,dpl
      000271 90r00r22         [24]  705 	mov	dptr,#_spi_read_command_1_45
      000274 F0               [24]  706 	movx	@dptr,a
                                    707 ;	src/radio.c:95: rfcsn = 0;
      000275 C2 91            [12]  708 	clr	_rfcsn
                                    709 ;	src/radio.c:96: spi_transfer(command);
      000277 90r00r22         [24]  710 	mov	dptr,#_spi_read_command_1_45
      00027A E0               [24]  711 	movx	a,@dptr
      00027B F5 82            [12]  712 	mov	dpl,a
      00027D 12r01rE9         [24]  713 	lcall	_spi_transfer
                                    714 ;	src/radio.c:97: for(x = 0; x < length; x++) buffer[x] = spi_transfer(0xFF);
      000280 90r00r1E         [24]  715 	mov	dptr,#_spi_read_PARM_2
      000283 E0               [24]  716 	movx	a,@dptr
      000284 FD               [12]  717 	mov	r5,a
      000285 A3               [24]  718 	inc	dptr
      000286 E0               [24]  719 	movx	a,@dptr
      000287 FE               [12]  720 	mov	r6,a
      000288 A3               [24]  721 	inc	dptr
      000289 E0               [24]  722 	movx	a,@dptr
      00028A FF               [12]  723 	mov	r7,a
      00028B 90r00r21         [24]  724 	mov	dptr,#_spi_read_PARM_3
      00028E E0               [24]  725 	movx	a,@dptr
      00028F FC               [12]  726 	mov	r4,a
      000290 7A 00            [12]  727 	mov	r2,#0x00
      000292 7B 00            [12]  728 	mov	r3,#0x00
      000294                        729 00103$:
      000294 8C 00            [24]  730 	mov	ar0,r4
      000296 79 00            [12]  731 	mov	r1,#0x00
      000298 C3               [12]  732 	clr	c
      000299 EA               [12]  733 	mov	a,r2
      00029A 98               [12]  734 	subb	a,r0
      00029B EB               [12]  735 	mov	a,r3
      00029C 64 80            [12]  736 	xrl	a,#0x80
      00029E 89 F0            [24]  737 	mov	b,r1
      0002A0 63 F0 80         [24]  738 	xrl	b,#0x80
      0002A3 95 F0            [12]  739 	subb	a,b
      0002A5 50 3E            [24]  740 	jnc	00101$
      0002A7 C0 04            [24]  741 	push	ar4
      0002A9 EA               [12]  742 	mov	a,r2
      0002AA 2D               [12]  743 	add	a,r5
      0002AB F5*02            [12]  744 	mov	_spi_read_sloc0_1_0,a
      0002AD EB               [12]  745 	mov	a,r3
      0002AE 3E               [12]  746 	addc	a,r6
      0002AF F5*03            [12]  747 	mov	(_spi_read_sloc0_1_0 + 1),a
      0002B1 8F*04            [24]  748 	mov	(_spi_read_sloc0_1_0 + 2),r7
      0002B3 75 82 FF         [24]  749 	mov	dpl,#0xFF
      0002B6 C0 07            [24]  750 	push	ar7
      0002B8 C0 06            [24]  751 	push	ar6
      0002BA C0 05            [24]  752 	push	ar5
      0002BC C0 03            [24]  753 	push	ar3
      0002BE C0 02            [24]  754 	push	ar2
      0002C0 12r01rE9         [24]  755 	lcall	_spi_transfer
      0002C3 AC 82            [24]  756 	mov	r4,dpl
      0002C5 D0 02            [24]  757 	pop	ar2
      0002C7 D0 03            [24]  758 	pop	ar3
      0002C9 D0 05            [24]  759 	pop	ar5
      0002CB D0 06            [24]  760 	pop	ar6
      0002CD D0 07            [24]  761 	pop	ar7
      0002CF 85*02 82         [24]  762 	mov	dpl,_spi_read_sloc0_1_0
      0002D2 85*03 83         [24]  763 	mov	dph,(_spi_read_sloc0_1_0 + 1)
      0002D5 85*04 F0         [24]  764 	mov	b,(_spi_read_sloc0_1_0 + 2)
      0002D8 EC               [12]  765 	mov	a,r4
      0002D9 12r00r00         [24]  766 	lcall	__gptrput
      0002DC 0A               [12]  767 	inc	r2
      0002DD BA 00 01         [24]  768 	cjne	r2,#0x00,00115$
      0002E0 0B               [12]  769 	inc	r3
      0002E1                        770 00115$:
      0002E1 D0 04            [24]  771 	pop	ar4
      0002E3 80 AF            [24]  772 	sjmp	00103$
      0002E5                        773 00101$:
                                    774 ;	src/radio.c:98: rfcsn = 1;    
      0002E5 D2 91            [12]  775 	setb	_rfcsn
      0002E7 22               [24]  776 	ret
                                    777 ;------------------------------------------------------------
                                    778 ;Allocation info for local variables in function 'write_register_byte'
                                    779 ;------------------------------------------------------------
                                    780 ;byte                      Allocated with name '_write_register_byte_PARM_2'
                                    781 ;reg                       Allocated with name '_write_register_byte_reg_1_47'
                                    782 ;------------------------------------------------------------
                                    783 ;	src/radio.c:102: void write_register_byte(uint8_t reg, uint8_t byte) 
                                    784 ;	-----------------------------------------
                                    785 ;	 function write_register_byte
                                    786 ;	-----------------------------------------
      0002E8                        787 _write_register_byte:
      0002E8 E5 82            [12]  788 	mov	a,dpl
      0002EA 90r00r24         [24]  789 	mov	dptr,#_write_register_byte_reg_1_47
      0002ED F0               [24]  790 	movx	@dptr,a
                                    791 ;	src/radio.c:104: write_register(W_REGISTER | reg, &byte, 1);
      0002EE E0               [24]  792 	movx	a,@dptr
      0002EF FF               [12]  793 	mov	r7,a
      0002F0 43 07 20         [24]  794 	orl	ar7,#0x20
      0002F3 90r00r19         [24]  795 	mov	dptr,#_spi_write_PARM_2
      0002F6 74r23            [12]  796 	mov	a,#_write_register_byte_PARM_2
      0002F8 F0               [24]  797 	movx	@dptr,a
      0002F9 74s00            [12]  798 	mov	a,#(_write_register_byte_PARM_2 >> 8)
      0002FB A3               [24]  799 	inc	dptr
      0002FC F0               [24]  800 	movx	@dptr,a
      0002FD E4               [12]  801 	clr	a
      0002FE A3               [24]  802 	inc	dptr
      0002FF F0               [24]  803 	movx	@dptr,a
      000300 90r00r1C         [24]  804 	mov	dptr,#_spi_write_PARM_3
      000303 04               [12]  805 	inc	a
      000304 F0               [24]  806 	movx	@dptr,a
      000305 8F 82            [24]  807 	mov	dpl,r7
      000307 02r01rFB         [24]  808 	ljmp	_spi_write
                                    809 ;------------------------------------------------------------
                                    810 ;Allocation info for local variables in function 'crc_update'
                                    811 ;------------------------------------------------------------
                                    812 ;byte                      Allocated with name '_crc_update_PARM_2'
                                    813 ;bits                      Allocated with name '_crc_update_PARM_3'
                                    814 ;crc                       Allocated with name '_crc_update_crc_1_49'
                                    815 ;------------------------------------------------------------
                                    816 ;	src/radio.c:108: uint16_t crc_update(uint16_t crc, uint8_t byte, uint8_t bits)
                                    817 ;	-----------------------------------------
                                    818 ;	 function crc_update
                                    819 ;	-----------------------------------------
      00030A                        820 _crc_update:
      00030A AF 83            [24]  821 	mov	r7,dph
      00030C E5 82            [12]  822 	mov	a,dpl
      00030E 90r00r27         [24]  823 	mov	dptr,#_crc_update_crc_1_49
      000311 F0               [24]  824 	movx	@dptr,a
      000312 EF               [12]  825 	mov	a,r7
      000313 A3               [24]  826 	inc	dptr
      000314 F0               [24]  827 	movx	@dptr,a
                                    828 ;	src/radio.c:110: crc = crc ^ (byte << 8);
      000315 90r00r25         [24]  829 	mov	dptr,#_crc_update_PARM_2
      000318 E0               [24]  830 	movx	a,@dptr
      000319 FE               [12]  831 	mov	r6,a
      00031A 7F 00            [12]  832 	mov	r7,#0x00
      00031C 90r00r27         [24]  833 	mov	dptr,#_crc_update_crc_1_49
      00031F E0               [24]  834 	movx	a,@dptr
      000320 FC               [12]  835 	mov	r4,a
      000321 A3               [24]  836 	inc	dptr
      000322 E0               [24]  837 	movx	a,@dptr
      000323 FD               [12]  838 	mov	r5,a
      000324 90r00r27         [24]  839 	mov	dptr,#_crc_update_crc_1_49
      000327 EF               [12]  840 	mov	a,r7
      000328 6C               [12]  841 	xrl	a,r4
      000329 F0               [24]  842 	movx	@dptr,a
      00032A EE               [12]  843 	mov	a,r6
      00032B 6D               [12]  844 	xrl	a,r5
      00032C A3               [24]  845 	inc	dptr
      00032D F0               [24]  846 	movx	@dptr,a
                                    847 ;	src/radio.c:111: while(bits--)
      00032E 90r00r26         [24]  848 	mov	dptr,#_crc_update_PARM_3
      000331 E0               [24]  849 	movx	a,@dptr
      000332 FF               [12]  850 	mov	r7,a
      000333                        851 00104$:
      000333 8F 06            [24]  852 	mov	ar6,r7
      000335 1F               [12]  853 	dec	r7
      000336 EE               [12]  854 	mov	a,r6
      000337 60 3C            [24]  855 	jz	00106$
                                    856 ;	src/radio.c:112: if((crc & 0x8000) == 0x8000) crc = (crc << 1) ^ 0x1021;
      000339 90r00r27         [24]  857 	mov	dptr,#_crc_update_crc_1_49
      00033C E0               [24]  858 	movx	a,@dptr
      00033D FD               [12]  859 	mov	r5,a
      00033E A3               [24]  860 	inc	dptr
      00033F E0               [24]  861 	movx	a,@dptr
      000340 FE               [12]  862 	mov	r6,a
      000341 7B 00            [12]  863 	mov	r3,#0x00
      000343 74 80            [12]  864 	mov	a,#0x80
      000345 5E               [12]  865 	anl	a,r6
      000346 FC               [12]  866 	mov	r4,a
      000347 BB 00 1A         [24]  867 	cjne	r3,#0x00,00102$
      00034A BC 80 17         [24]  868 	cjne	r4,#0x80,00102$
      00034D 8D 03            [24]  869 	mov	ar3,r5
      00034F EE               [12]  870 	mov	a,r6
      000350 CB               [12]  871 	xch	a,r3
      000351 25 E0            [12]  872 	add	a,acc
      000353 CB               [12]  873 	xch	a,r3
      000354 33               [12]  874 	rlc	a
      000355 FC               [12]  875 	mov	r4,a
      000356 90r00r27         [24]  876 	mov	dptr,#_crc_update_crc_1_49
      000359 74 21            [12]  877 	mov	a,#0x21
      00035B 6B               [12]  878 	xrl	a,r3
      00035C F0               [24]  879 	movx	@dptr,a
      00035D 74 10            [12]  880 	mov	a,#0x10
      00035F 6C               [12]  881 	xrl	a,r4
      000360 A3               [24]  882 	inc	dptr
      000361 F0               [24]  883 	movx	@dptr,a
      000362 80 CF            [24]  884 	sjmp	00104$
      000364                        885 00102$:
                                    886 ;	src/radio.c:113: else crc = crc << 1;
      000364 EE               [12]  887 	mov	a,r6
      000365 CD               [12]  888 	xch	a,r5
      000366 25 E0            [12]  889 	add	a,acc
      000368 CD               [12]  890 	xch	a,r5
      000369 33               [12]  891 	rlc	a
      00036A FE               [12]  892 	mov	r6,a
      00036B 90r00r27         [24]  893 	mov	dptr,#_crc_update_crc_1_49
      00036E ED               [12]  894 	mov	a,r5
      00036F F0               [24]  895 	movx	@dptr,a
      000370 EE               [12]  896 	mov	a,r6
      000371 A3               [24]  897 	inc	dptr
      000372 F0               [24]  898 	movx	@dptr,a
      000373 80 BE            [24]  899 	sjmp	00104$
      000375                        900 00106$:
                                    901 ;	src/radio.c:114: crc = crc & 0xFFFF;
                                    902 ;	src/radio.c:115: return crc;
      000375 90r00r27         [24]  903 	mov	dptr,#_crc_update_crc_1_49
      000378 E0               [24]  904 	movx	a,@dptr
      000379 FE               [12]  905 	mov	r6,a
      00037A A3               [24]  906 	inc	dptr
      00037B E0               [24]  907 	movx	a,@dptr
      00037C 8E 82            [24]  908 	mov	dpl,r6
      00037E F5 83            [12]  909 	mov	dph,a
      000380 22               [24]  910 	ret
                                    911 ;------------------------------------------------------------
                                    912 ;Allocation info for local variables in function 'handle_radio_request'
                                    913 ;------------------------------------------------------------
                                    914 ;sloc0                     Allocated with name '_handle_radio_request_sloc0_1_0'
                                    915 ;sloc1                     Allocated with name '_handle_radio_request_sloc1_1_0'
                                    916 ;data                      Allocated with name '_handle_radio_request_PARM_2'
                                    917 ;request                   Allocated with name '_handle_radio_request_request_1_51'
                                    918 ;value                     Allocated with name '_handle_radio_request_value_2_58'
                                    919 ;x                         Allocated with name '_handle_radio_request_x_4_63'
                                    920 ;offset                    Allocated with name '_handle_radio_request_offset_4_63'
                                    921 ;payload_length            Allocated with name '_handle_radio_request_payload_length_4_63'
                                    922 ;crc                       Allocated with name '_handle_radio_request_crc_4_63'
                                    923 ;crc_given                 Allocated with name '_handle_radio_request_crc_given_4_63'
                                    924 ;payload                   Allocated with name '_handle_radio_request_payload_4_63'
                                    925 ;__00030005                Allocated with name '_handle_radio_request___00030005_4_75'
                                    926 ;us                        Allocated with name '_handle_radio_request_us_4_75'
                                    927 ;------------------------------------------------------------
                                    928 ;	src/radio.c:119: void handle_radio_request(uint8_t request, uint8_t * data)
                                    929 ;	-----------------------------------------
                                    930 ;	 function handle_radio_request
                                    931 ;	-----------------------------------------
      000381                        932 _handle_radio_request:
      000381 E5 82            [12]  933 	mov	a,dpl
      000383 90r00r2C         [24]  934 	mov	dptr,#_handle_radio_request_request_1_51
      000386 F0               [24]  935 	movx	@dptr,a
                                    936 ;	src/radio.c:122: if(request == LAUNCH_BOOTLOADER)
      000387 E0               [24]  937 	movx	a,@dptr
      000388 FF               [12]  938 	mov	r7,a
      000389 BF FF 0E         [24]  939 	cjne	r7,#0xFF,00164$
                                    940 ;	src/radio.c:124: bootloader();
      00038C 90r00r00         [24]  941 	mov	dptr,#_bootloader
      00038F E0               [24]  942 	movx	a,@dptr
      000390 F8               [12]  943 	mov	r0,a
      000391 A3               [24]  944 	inc	dptr
      000392 E0               [24]  945 	movx	a,@dptr
      000393 F5 83            [12]  946 	mov	dph,a
      000395 88 82            [24]  947 	mov	dpl,r0
                                    948 ;	src/radio.c:125: return;
      000397 02r00r00         [24]  949 	ljmp	__sdcc_call_dptr
      00039A                        950 00164$:
                                    951 ;	src/radio.c:129: else if(request == ENABLE_LNA)
      00039A BF 0B 10         [24]  952 	cjne	r7,#0x0B,00161$
                                    953 ;	src/radio.c:131: P0DIR &= ~0x10;
      00039D AE 94            [24]  954 	mov	r6,_P0DIR
      00039F 74 EF            [12]  955 	mov	a,#0xEF
      0003A1 5E               [12]  956 	anl	a,r6
      0003A2 F5 94            [12]  957 	mov	_P0DIR,a
                                    958 ;	src/radio.c:132: P0 |= 0x10;
      0003A4 43 80 10         [24]  959 	orl	_P0,#0x10
                                    960 ;	src/radio.c:133: in1bc = 0;
      0003A7 90 C7 B7         [24]  961 	mov	dptr,#0xC7B7
      0003AA E4               [12]  962 	clr	a
      0003AB F0               [24]  963 	movx	@dptr,a
                                    964 ;	src/radio.c:134: return;
      0003AC 22               [24]  965 	ret
      0003AD                        966 00161$:
                                    967 ;	src/radio.c:138: else if(request == SET_CHANNEL)
      0003AD BF 09 68         [24]  968 	cjne	r7,#0x09,00158$
                                    969 ;	src/radio.c:140: rfce = 0;
      0003B0 C2 90            [12]  970 	clr	_rfce
                                    971 ;	src/radio.c:141: write_register_byte(RF_CH, data[0]);
      0003B2 90r00r29         [24]  972 	mov	dptr,#_handle_radio_request_PARM_2
      0003B5 E0               [24]  973 	movx	a,@dptr
      0003B6 FC               [12]  974 	mov	r4,a
      0003B7 A3               [24]  975 	inc	dptr
      0003B8 E0               [24]  976 	movx	a,@dptr
      0003B9 FD               [12]  977 	mov	r5,a
      0003BA A3               [24]  978 	inc	dptr
      0003BB E0               [24]  979 	movx	a,@dptr
      0003BC FE               [12]  980 	mov	r6,a
      0003BD 8C 82            [24]  981 	mov	dpl,r4
      0003BF 8D 83            [24]  982 	mov	dph,r5
      0003C1 8E F0            [24]  983 	mov	b,r6
      0003C3 12r00r00         [24]  984 	lcall	__gptrget
      0003C6 90r00r23         [24]  985 	mov	dptr,#_write_register_byte_PARM_2
      0003C9 F0               [24]  986 	movx	@dptr,a
      0003CA 75 82 05         [24]  987 	mov	dpl,#0x05
      0003CD C0 06            [24]  988 	push	ar6
      0003CF C0 05            [24]  989 	push	ar5
      0003D1 C0 04            [24]  990 	push	ar4
      0003D3 12r02rE8         [24]  991 	lcall	_write_register_byte
      0003D6 D0 04            [24]  992 	pop	ar4
      0003D8 D0 05            [24]  993 	pop	ar5
      0003DA D0 06            [24]  994 	pop	ar6
                                    995 ;	src/radio.c:142: in1bc = 1;
      0003DC 90 C7 B7         [24]  996 	mov	dptr,#0xC7B7
      0003DF 74 01            [12]  997 	mov	a,#0x01
      0003E1 F0               [24]  998 	movx	@dptr,a
                                    999 ;	src/radio.c:143: in1buf[0] = data[0];
      0003E2 8C 82            [24] 1000 	mov	dpl,r4
      0003E4 8D 83            [24] 1001 	mov	dph,r5
      0003E6 8E F0            [24] 1002 	mov	b,r6
      0003E8 12r00r00         [24] 1003 	lcall	__gptrget
      0003EB 90 C6 80         [24] 1004 	mov	dptr,#_in1buf
      0003EE F0               [24] 1005 	movx	@dptr,a
                                   1006 ;	src/radio.c:144: flush_rx();
      0003EF 90r00r19         [24] 1007 	mov	dptr,#_spi_write_PARM_2
      0003F2 E4               [12] 1008 	clr	a
      0003F3 F0               [24] 1009 	movx	@dptr,a
      0003F4 A3               [24] 1010 	inc	dptr
      0003F5 F0               [24] 1011 	movx	@dptr,a
      0003F6 A3               [24] 1012 	inc	dptr
      0003F7 F0               [24] 1013 	movx	@dptr,a
      0003F8 90r00r1C         [24] 1014 	mov	dptr,#_spi_write_PARM_3
      0003FB F0               [24] 1015 	movx	@dptr,a
      0003FC 75 82 E2         [24] 1016 	mov	dpl,#0xE2
      0003FF 12r01rFB         [24] 1017 	lcall	_spi_write
                                   1018 ;	src/radio.c:145: flush_tx();
      000402 90r00r19         [24] 1019 	mov	dptr,#_spi_write_PARM_2
      000405 E4               [12] 1020 	clr	a
      000406 F0               [24] 1021 	movx	@dptr,a
      000407 A3               [24] 1022 	inc	dptr
      000408 F0               [24] 1023 	movx	@dptr,a
      000409 A3               [24] 1024 	inc	dptr
      00040A F0               [24] 1025 	movx	@dptr,a
      00040B 90r00r1C         [24] 1026 	mov	dptr,#_spi_write_PARM_3
      00040E F0               [24] 1027 	movx	@dptr,a
      00040F 75 82 E1         [24] 1028 	mov	dpl,#0xE1
      000412 12r01rFB         [24] 1029 	lcall	_spi_write
                                   1030 ;	src/radio.c:146: rfce = 1;
      000415 D2 90            [12] 1031 	setb	_rfce
                                   1032 ;	src/radio.c:147: return;
      000417 22               [24] 1033 	ret
      000418                       1034 00158$:
                                   1035 ;	src/radio.c:151: else if(request == GET_CHANNEL)
      000418 BF 0A 1F         [24] 1036 	cjne	r7,#0x0A,00155$
                                   1037 ;	src/radio.c:153: spi_read(RF_CH, in1buf, 1);
      00041B 90r00r1E         [24] 1038 	mov	dptr,#_spi_read_PARM_2
      00041E 74 80            [12] 1039 	mov	a,#_in1buf
      000420 F0               [24] 1040 	movx	@dptr,a
      000421 74 C6            [12] 1041 	mov	a,#(_in1buf >> 8)
      000423 A3               [24] 1042 	inc	dptr
      000424 F0               [24] 1043 	movx	@dptr,a
      000425 E4               [12] 1044 	clr	a
      000426 A3               [24] 1045 	inc	dptr
      000427 F0               [24] 1046 	movx	@dptr,a
      000428 90r00r21         [24] 1047 	mov	dptr,#_spi_read_PARM_3
      00042B 04               [12] 1048 	inc	a
      00042C F0               [24] 1049 	movx	@dptr,a
      00042D 75 82 05         [24] 1050 	mov	dpl,#0x05
      000430 12r02r6F         [24] 1051 	lcall	_spi_read
                                   1052 ;	src/radio.c:154: in1bc = 1;
      000433 90 C7 B7         [24] 1053 	mov	dptr,#0xC7B7
      000436 74 01            [12] 1054 	mov	a,#0x01
      000438 F0               [24] 1055 	movx	@dptr,a
                                   1056 ;	src/radio.c:155: return;
      000439 22               [24] 1057 	ret
      00043A                       1058 00155$:
                                   1059 ;	src/radio.c:159: else if(request == ENTER_PROMISCUOUS_MODE)
      00043A BF 06 2A         [24] 1060 	cjne	r7,#0x06,00152$
                                   1061 ;	src/radio.c:161: enter_promiscuous_mode(&data[1] /* address prefix */, data[0] /* prefix length */);       
      00043D 90r00r29         [24] 1062 	mov	dptr,#_handle_radio_request_PARM_2
      000440 E0               [24] 1063 	movx	a,@dptr
      000441 FC               [12] 1064 	mov	r4,a
      000442 A3               [24] 1065 	inc	dptr
      000443 E0               [24] 1066 	movx	a,@dptr
      000444 FD               [12] 1067 	mov	r5,a
      000445 A3               [24] 1068 	inc	dptr
      000446 E0               [24] 1069 	movx	a,@dptr
      000447 FE               [12] 1070 	mov	r6,a
      000448 74 01            [12] 1071 	mov	a,#0x01
      00044A 2C               [12] 1072 	add	a,r4
      00044B F9               [12] 1073 	mov	r1,a
      00044C E4               [12] 1074 	clr	a
      00044D 3D               [12] 1075 	addc	a,r5
      00044E FA               [12] 1076 	mov	r2,a
      00044F 8E 03            [24] 1077 	mov	ar3,r6
      000451 8C 82            [24] 1078 	mov	dpl,r4
      000453 8D 83            [24] 1079 	mov	dph,r5
      000455 8E F0            [24] 1080 	mov	b,r6
      000457 12r00r00         [24] 1081 	lcall	__gptrget
      00045A 90r00r08         [24] 1082 	mov	dptr,#_enter_promiscuous_mode_PARM_2
      00045D F0               [24] 1083 	movx	@dptr,a
      00045E 89 82            [24] 1084 	mov	dpl,r1
      000460 8A 83            [24] 1085 	mov	dph,r2
      000462 8B F0            [24] 1086 	mov	b,r3
      000464 02r00r00         [24] 1087 	ljmp	_enter_promiscuous_mode
      000467                       1088 00152$:
                                   1089 ;	src/radio.c:165: else if(request == RECEIVE_PACKET)
      000467 BF 12 02         [24] 1090 	cjne	r7,#0x12,00305$
      00046A 80 03            [24] 1091 	sjmp	00306$
      00046C                       1092 00305$:
      00046C 02r07rE5         [24] 1093 	ljmp	00149$
      00046F                       1094 00306$:
                                   1095 ;	src/radio.c:170: read_register(FIFO_STATUS, &value, 1);
      00046F 90r00r1E         [24] 1096 	mov	dptr,#_spi_read_PARM_2
      000472 74r2D            [12] 1097 	mov	a,#_handle_radio_request_value_2_58
      000474 F0               [24] 1098 	movx	@dptr,a
      000475 74s00            [12] 1099 	mov	a,#(_handle_radio_request_value_2_58 >> 8)
      000477 A3               [24] 1100 	inc	dptr
      000478 F0               [24] 1101 	movx	@dptr,a
      000479 E4               [12] 1102 	clr	a
      00047A A3               [24] 1103 	inc	dptr
      00047B F0               [24] 1104 	movx	@dptr,a
      00047C 90r00r21         [24] 1105 	mov	dptr,#_spi_read_PARM_3
      00047F 04               [12] 1106 	inc	a
      000480 F0               [24] 1107 	movx	@dptr,a
      000481 75 82 17         [24] 1108 	mov	dpl,#0x17
      000484 12r02r6F         [24] 1109 	lcall	_spi_read
                                   1110 ;	src/radio.c:171: if((value & 1) == 0)
      000487 90r00r2D         [24] 1111 	mov	dptr,#_handle_radio_request_value_2_58
      00048A E0               [24] 1112 	movx	a,@dptr
      00048B FE               [12] 1113 	mov	r6,a
      00048C 30 E0 03         [24] 1114 	jnb	acc.0,00307$
      00048F 02r07rD8         [24] 1115 	ljmp	00124$
      000492                       1116 00307$:
                                   1117 ;	src/radio.c:174: if(!in_pm)
      000492 90r00r00         [24] 1118 	mov	dptr,#_in_pm
      000495 E0               [24] 1119 	movx	a,@dptr
      000496 70 69            [24] 1120 	jnz	00195$
                                   1121 ;	src/radio.c:177: read_register(R_RX_PL_WID, &value, 1);
      000498 90r00r1E         [24] 1122 	mov	dptr,#_spi_read_PARM_2
      00049B 74r2D            [12] 1123 	mov	a,#_handle_radio_request_value_2_58
      00049D F0               [24] 1124 	movx	@dptr,a
      00049E 74s00            [12] 1125 	mov	a,#(_handle_radio_request_value_2_58 >> 8)
      0004A0 A3               [24] 1126 	inc	dptr
      0004A1 F0               [24] 1127 	movx	@dptr,a
      0004A2 E4               [12] 1128 	clr	a
      0004A3 A3               [24] 1129 	inc	dptr
      0004A4 F0               [24] 1130 	movx	@dptr,a
      0004A5 90r00r21         [24] 1131 	mov	dptr,#_spi_read_PARM_3
      0004A8 04               [12] 1132 	inc	a
      0004A9 F0               [24] 1133 	movx	@dptr,a
      0004AA 75 82 60         [24] 1134 	mov	dpl,#0x60
      0004AD 12r02r6F         [24] 1135 	lcall	_spi_read
                                   1136 ;	src/radio.c:178: if(value <= 32)
      0004B0 90r00r2D         [24] 1137 	mov	dptr,#_handle_radio_request_value_2_58
      0004B3 E0               [24] 1138 	movx	a,@dptr
      0004B4 FE               [12] 1139 	mov  r6,a
      0004B5 24 DF            [12] 1140 	add	a,#0xff - 0x20
      0004B7 40 29            [24] 1141 	jc	00102$
                                   1142 ;	src/radio.c:181: read_register(R_RX_PAYLOAD, &in1buf[1], value);
      0004B9 90r00r1E         [24] 1143 	mov	dptr,#_spi_read_PARM_2
      0004BC 74 81            [12] 1144 	mov	a,#(_in1buf + 0x0001)
      0004BE F0               [24] 1145 	movx	@dptr,a
      0004BF 74 C6            [12] 1146 	mov	a,#((_in1buf + 0x0001) >> 8)
      0004C1 A3               [24] 1147 	inc	dptr
      0004C2 F0               [24] 1148 	movx	@dptr,a
      0004C3 E4               [12] 1149 	clr	a
      0004C4 A3               [24] 1150 	inc	dptr
      0004C5 F0               [24] 1151 	movx	@dptr,a
      0004C6 90r00r21         [24] 1152 	mov	dptr,#_spi_read_PARM_3
      0004C9 EE               [12] 1153 	mov	a,r6
      0004CA F0               [24] 1154 	movx	@dptr,a
      0004CB 75 82 61         [24] 1155 	mov	dpl,#0x61
      0004CE 12r02r6F         [24] 1156 	lcall	_spi_read
                                   1157 ;	src/radio.c:182: in1buf[0] = 0;
      0004D1 90 C6 80         [24] 1158 	mov	dptr,#_in1buf
      0004D4 E4               [12] 1159 	clr	a
      0004D5 F0               [24] 1160 	movx	@dptr,a
                                   1161 ;	src/radio.c:183: in1bc = value + 1;
      0004D6 90r00r2D         [24] 1162 	mov	dptr,#_handle_radio_request_value_2_58
      0004D9 E0               [24] 1163 	movx	a,@dptr
      0004DA FE               [12] 1164 	mov	r6,a
      0004DB 0E               [12] 1165 	inc	r6
      0004DC 90 C7 B7         [24] 1166 	mov	dptr,#0xC7B7
      0004DF EE               [12] 1167 	mov	a,r6
      0004E0 F0               [24] 1168 	movx	@dptr,a
                                   1169 ;	src/radio.c:184: return;
      0004E1 22               [24] 1170 	ret
      0004E2                       1171 00102$:
                                   1172 ;	src/radio.c:189: in1bc = 1;
      0004E2 90 C7 B7         [24] 1173 	mov	dptr,#0xC7B7
      0004E5 74 01            [12] 1174 	mov	a,#0x01
      0004E7 F0               [24] 1175 	movx	@dptr,a
                                   1176 ;	src/radio.c:190: in1buf[0] = 0xFF;
      0004E8 90 C6 80         [24] 1177 	mov	dptr,#_in1buf
      0004EB 74 FF            [12] 1178 	mov	a,#0xFF
      0004ED F0               [24] 1179 	movx	@dptr,a
                                   1180 ;	src/radio.c:191: flush_rx();
      0004EE 90r00r19         [24] 1181 	mov	dptr,#_spi_write_PARM_2
      0004F1 E4               [12] 1182 	clr	a
      0004F2 F0               [24] 1183 	movx	@dptr,a
      0004F3 A3               [24] 1184 	inc	dptr
      0004F4 F0               [24] 1185 	movx	@dptr,a
      0004F5 A3               [24] 1186 	inc	dptr
      0004F6 F0               [24] 1187 	movx	@dptr,a
      0004F7 90r00r1C         [24] 1188 	mov	dptr,#_spi_write_PARM_3
      0004FA F0               [24] 1189 	movx	@dptr,a
      0004FB 75 82 E2         [24] 1190 	mov	dpl,#0xE2
                                   1191 ;	src/radio.c:192: return;
      0004FE 02r01rFB         [24] 1192 	ljmp	_spi_write
                                   1193 ;	src/radio.c:205: for(x = 0; x < pm_prefix_length; x++) payload[pm_prefix_length - x - 1] = pm_prefix[x];
      000501                       1194 00195$:
      000501 7D 00            [12] 1195 	mov	r5,#0x00
      000503 7E 00            [12] 1196 	mov	r6,#0x00
      000505                       1197 00171$:
      000505 90r00r01         [24] 1198 	mov	dptr,#_pm_prefix_length
      000508 E0               [24] 1199 	movx	a,@dptr
      000509 FB               [12] 1200 	mov	r3,a
      00050A A3               [24] 1201 	inc	dptr
      00050B E0               [24] 1202 	movx	a,@dptr
      00050C FC               [12] 1203 	mov	r4,a
      00050D C3               [12] 1204 	clr	c
      00050E ED               [12] 1205 	mov	a,r5
      00050F 9B               [12] 1206 	subb	a,r3
      000510 EE               [12] 1207 	mov	a,r6
      000511 64 80            [12] 1208 	xrl	a,#0x80
      000513 8C F0            [24] 1209 	mov	b,r4
      000515 63 F0 80         [24] 1210 	xrl	b,#0x80
      000518 95 F0            [12] 1211 	subb	a,b
      00051A 50 27            [24] 1212 	jnc	00104$
      00051C 8B 02            [24] 1213 	mov	ar2,r3
      00051E 8D 01            [24] 1214 	mov	ar1,r5
      000520 EA               [12] 1215 	mov	a,r2
      000521 C3               [12] 1216 	clr	c
      000522 99               [12] 1217 	subb	a,r1
      000523 14               [12] 1218 	dec	a
      000524 24r32            [12] 1219 	add	a,#_handle_radio_request_payload_4_63
      000526 F9               [12] 1220 	mov	r1,a
      000527 E4               [12] 1221 	clr	a
      000528 34s00            [12] 1222 	addc	a,#(_handle_radio_request_payload_4_63 >> 8)
      00052A FA               [12] 1223 	mov	r2,a
      00052B ED               [12] 1224 	mov	a,r5
      00052C 24r03            [12] 1225 	add	a,#_pm_prefix
      00052E F5 82            [12] 1226 	mov	dpl,a
      000530 EE               [12] 1227 	mov	a,r6
      000531 34s00            [12] 1228 	addc	a,#(_pm_prefix >> 8)
      000533 F5 83            [12] 1229 	mov	dph,a
      000535 E0               [24] 1230 	movx	a,@dptr
      000536 F8               [12] 1231 	mov	r0,a
      000537 89 82            [24] 1232 	mov	dpl,r1
      000539 8A 83            [24] 1233 	mov	dph,r2
      00053B F0               [24] 1234 	movx	@dptr,a
      00053C 0D               [12] 1235 	inc	r5
      00053D BD 00 C5         [24] 1236 	cjne	r5,#0x00,00171$
      000540 0E               [12] 1237 	inc	r6
      000541 80 C2            [24] 1238 	sjmp	00171$
      000543                       1239 00104$:
                                   1240 ;	src/radio.c:206: read_register(R_RX_PAYLOAD, &payload[pm_prefix_length], 32);
      000543 EB               [12] 1241 	mov	a,r3
      000544 24r32            [12] 1242 	add	a,#_handle_radio_request_payload_4_63
      000546 FB               [12] 1243 	mov	r3,a
      000547 EC               [12] 1244 	mov	a,r4
      000548 34s00            [12] 1245 	addc	a,#(_handle_radio_request_payload_4_63 >> 8)
      00054A FC               [12] 1246 	mov	r4,a
      00054B 90r00r1E         [24] 1247 	mov	dptr,#_spi_read_PARM_2
      00054E EB               [12] 1248 	mov	a,r3
      00054F F0               [24] 1249 	movx	@dptr,a
      000550 EC               [12] 1250 	mov	a,r4
      000551 A3               [24] 1251 	inc	dptr
      000552 F0               [24] 1252 	movx	@dptr,a
      000553 E4               [12] 1253 	clr	a
      000554 A3               [24] 1254 	inc	dptr
      000555 F0               [24] 1255 	movx	@dptr,a
      000556 90r00r21         [24] 1256 	mov	dptr,#_spi_read_PARM_3
      000559 74 20            [12] 1257 	mov	a,#0x20
      00055B F0               [24] 1258 	movx	@dptr,a
      00055C 75 82 61         [24] 1259 	mov	dpl,#0x61
      00055F 12r02r6F         [24] 1260 	lcall	_spi_read
                                   1261 ;	src/radio.c:213: for(offset = 0; offset < 2; offset++)
      000562 E4               [12] 1262 	clr	a
      000563 F5*07            [12] 1263 	mov	_handle_radio_request_sloc1_1_0,a
      000565 F5*08            [12] 1264 	mov	(_handle_radio_request_sloc1_1_0 + 1),a
      000567                       1265 00181$:
                                   1266 ;	src/radio.c:216: if(offset == 1)
      000567 74 01            [12] 1267 	mov	a,#0x01
      000569 B5*07 06         [24] 1268 	cjne	a,_handle_radio_request_sloc1_1_0,00312$
      00056C E4               [12] 1269 	clr	a
      00056D B5*08 02         [24] 1270 	cjne	a,(_handle_radio_request_sloc1_1_0 + 1),00312$
      000570 80 02            [24] 1271 	sjmp	00313$
      000572                       1272 00312$:
      000572 80 5C            [24] 1273 	sjmp	00110$
      000574                       1274 00313$:
                                   1275 ;	src/radio.c:218: for(x = 31; x >= 0; x--)
      000574 7B 1F            [12] 1276 	mov	r3,#0x1F
      000576 7C 00            [12] 1277 	mov	r4,#0x00
      000578                       1278 00173$:
                                   1279 ;	src/radio.c:220: if(x > 0) payload[x] = payload[x - 1] << 7 | payload[x] >> 1;
      000578 C3               [12] 1280 	clr	c
      000579 E4               [12] 1281 	clr	a
      00057A 9B               [12] 1282 	subb	a,r3
      00057B 74 80            [12] 1283 	mov	a,#(0x00 ^ 0x80)
      00057D 8C F0            [24] 1284 	mov	b,r4
      00057F 63 F0 80         [24] 1285 	xrl	b,#0x80
      000582 95 F0            [12] 1286 	subb	a,b
      000584 50 2C            [24] 1287 	jnc	00106$
      000586 EB               [12] 1288 	mov	a,r3
      000587 24r32            [12] 1289 	add	a,#_handle_radio_request_payload_4_63
      000589 F9               [12] 1290 	mov	r1,a
      00058A EC               [12] 1291 	mov	a,r4
      00058B 34s00            [12] 1292 	addc	a,#(_handle_radio_request_payload_4_63 >> 8)
      00058D FA               [12] 1293 	mov	r2,a
      00058E 8B 00            [24] 1294 	mov	ar0,r3
      000590 E8               [12] 1295 	mov	a,r0
      000591 14               [12] 1296 	dec	a
      000592 24r32            [12] 1297 	add	a,#_handle_radio_request_payload_4_63
      000594 F5 82            [12] 1298 	mov	dpl,a
      000596 E4               [12] 1299 	clr	a
      000597 34s00            [12] 1300 	addc	a,#(_handle_radio_request_payload_4_63 >> 8)
      000599 F5 83            [12] 1301 	mov	dph,a
      00059B E0               [24] 1302 	movx	a,@dptr
      00059C 03               [12] 1303 	rr	a
      00059D 54 80            [12] 1304 	anl	a,#0x80
      00059F F8               [12] 1305 	mov	r0,a
      0005A0 89 82            [24] 1306 	mov	dpl,r1
      0005A2 8A 83            [24] 1307 	mov	dph,r2
      0005A4 E0               [24] 1308 	movx	a,@dptr
      0005A5 C3               [12] 1309 	clr	c
      0005A6 13               [12] 1310 	rrc	a
      0005A7 FE               [12] 1311 	mov	r6,a
      0005A8 42 00            [12] 1312 	orl	ar0,a
      0005AA 89 82            [24] 1313 	mov	dpl,r1
      0005AC 8A 83            [24] 1314 	mov	dph,r2
      0005AE E8               [12] 1315 	mov	a,r0
      0005AF F0               [24] 1316 	movx	@dptr,a
      0005B0 80 15            [24] 1317 	sjmp	00174$
      0005B2                       1318 00106$:
                                   1319 ;	src/radio.c:221: else payload[x] = payload[x] >> 1;
      0005B2 EB               [12] 1320 	mov	a,r3
      0005B3 24r32            [12] 1321 	add	a,#_handle_radio_request_payload_4_63
      0005B5 F9               [12] 1322 	mov	r1,a
      0005B6 EC               [12] 1323 	mov	a,r4
      0005B7 34s00            [12] 1324 	addc	a,#(_handle_radio_request_payload_4_63 >> 8)
      0005B9 FA               [12] 1325 	mov	r2,a
      0005BA 89 82            [24] 1326 	mov	dpl,r1
      0005BC 8A 83            [24] 1327 	mov	dph,r2
      0005BE E0               [24] 1328 	movx	a,@dptr
      0005BF C3               [12] 1329 	clr	c
      0005C0 13               [12] 1330 	rrc	a
      0005C1 F8               [12] 1331 	mov	r0,a
      0005C2 89 82            [24] 1332 	mov	dpl,r1
      0005C4 8A 83            [24] 1333 	mov	dph,r2
      0005C6 F0               [24] 1334 	movx	@dptr,a
      0005C7                       1335 00174$:
                                   1336 ;	src/radio.c:218: for(x = 31; x >= 0; x--)
      0005C7 1B               [12] 1337 	dec	r3
      0005C8 BB FF 01         [24] 1338 	cjne	r3,#0xFF,00315$
      0005CB 1C               [12] 1339 	dec	r4
      0005CC                       1340 00315$:
      0005CC EC               [12] 1341 	mov	a,r4
      0005CD 30 E7 A8         [24] 1342 	jnb	acc.7,00173$
      0005D0                       1343 00110$:
                                   1344 ;	src/radio.c:226: payload_length = payload[5] >> 2;
      0005D0 90r00r37         [24] 1345 	mov	dptr,#(_handle_radio_request_payload_4_63 + 0x0005)
      0005D3 E0               [24] 1346 	movx	a,@dptr
      0005D4 03               [12] 1347 	rr	a
      0005D5 03               [12] 1348 	rr	a
      0005D6 54 3F            [12] 1349 	anl	a,#0x3F
      0005D8 FC               [12] 1350 	mov	r4,a
                                   1351 ;	src/radio.c:231: if(payload_length <= 23 + pm_prefix_length)
      0005D9 90r00r01         [24] 1352 	mov	dptr,#_pm_prefix_length
      0005DC E0               [24] 1353 	movx	a,@dptr
      0005DD FA               [12] 1354 	mov	r2,a
      0005DE A3               [24] 1355 	inc	dptr
      0005DF E0               [24] 1356 	movx	a,@dptr
      0005E0 FB               [12] 1357 	mov	r3,a
      0005E1 74 17            [12] 1358 	mov	a,#0x17
      0005E3 2A               [12] 1359 	add	a,r2
      0005E4 FA               [12] 1360 	mov	r2,a
      0005E5 E4               [12] 1361 	clr	a
      0005E6 3B               [12] 1362 	addc	a,r3
      0005E7 FB               [12] 1363 	mov	r3,a
      0005E8 8C 00            [24] 1364 	mov	ar0,r4
      0005EA 79 00            [12] 1365 	mov	r1,#0x00
      0005EC C3               [12] 1366 	clr	c
      0005ED EA               [12] 1367 	mov	a,r2
      0005EE 98               [12] 1368 	subb	a,r0
      0005EF EB               [12] 1369 	mov	a,r3
      0005F0 64 80            [12] 1370 	xrl	a,#0x80
      0005F2 89 F0            [24] 1371 	mov	b,r1
      0005F4 63 F0 80         [24] 1372 	xrl	b,#0x80
      0005F7 95 F0            [12] 1373 	subb	a,b
      0005F9 50 03            [24] 1374 	jnc	00317$
      0005FB 02r07rC0         [24] 1375 	ljmp	00182$
      0005FE                       1376 00317$:
                                   1377 ;	src/radio.c:234: crc_given = (payload[6 + payload_length] << 9) | ((payload[7 + payload_length]) << 1);
      0005FE C0 00            [24] 1378 	push	ar0
      000600 C0 01            [24] 1379 	push	ar1
      000602 74 06            [12] 1380 	mov	a,#0x06
      000604 2C               [12] 1381 	add	a,r4
      000605 24r32            [12] 1382 	add	a,#_handle_radio_request_payload_4_63
      000607 F5 82            [12] 1383 	mov	dpl,a
      000609 E4               [12] 1384 	clr	a
      00060A 34s00            [12] 1385 	addc	a,#(_handle_radio_request_payload_4_63 >> 8)
      00060C F5 83            [12] 1386 	mov	dph,a
      00060E E0               [24] 1387 	movx	a,@dptr
      00060F 25 E0            [12] 1388 	add	a,acc
      000611 FA               [12] 1389 	mov	r2,a
      000612 7B 00            [12] 1390 	mov	r3,#0x00
      000614 74 07            [12] 1391 	mov	a,#0x07
      000616 2C               [12] 1392 	add	a,r4
      000617 24r32            [12] 1393 	add	a,#_handle_radio_request_payload_4_63
      000619 F5 82            [12] 1394 	mov	dpl,a
      00061B E4               [12] 1395 	clr	a
      00061C 34s00            [12] 1396 	addc	a,#(_handle_radio_request_payload_4_63 >> 8)
      00061E F5 83            [12] 1397 	mov	dph,a
      000620 E0               [24] 1398 	movx	a,@dptr
      000621 F8               [12] 1399 	mov	r0,a
      000622 E4               [12] 1400 	clr	a
      000623 C8               [12] 1401 	xch	a,r0
      000624 25 E0            [12] 1402 	add	a,acc
      000626 C8               [12] 1403 	xch	a,r0
      000627 33               [12] 1404 	rlc	a
      000628 F9               [12] 1405 	mov	r1,a
      000629 E8               [12] 1406 	mov	a,r0
      00062A 42 03            [12] 1407 	orl	ar3,a
      00062C E9               [12] 1408 	mov	a,r1
      00062D 42 02            [12] 1409 	orl	ar2,a
                                   1410 ;	src/radio.c:235: crc_given = (crc_given << 8) | (crc_given >> 8);
      00062F 8A*05            [24] 1411 	mov	_handle_radio_request_sloc0_1_0,r2
      000631 8B*06            [24] 1412 	mov	(_handle_radio_request_sloc0_1_0 + 1),r3
      000633 90r00r30         [24] 1413 	mov	dptr,#_handle_radio_request_crc_given_4_63
      000636 E5*05            [12] 1414 	mov	a,_handle_radio_request_sloc0_1_0
      000638 F0               [24] 1415 	movx	@dptr,a
      000639 E5*06            [12] 1416 	mov	a,(_handle_radio_request_sloc0_1_0 + 1)
      00063B A3               [24] 1417 	inc	dptr
      00063C F0               [24] 1418 	movx	@dptr,a
                                   1419 ;	src/radio.c:236: if(payload[8 + payload_length] & 0x80) crc_given |= 0x100;
      00063D 74 08            [12] 1420 	mov	a,#0x08
      00063F 2C               [12] 1421 	add	a,r4
      000640 24r32            [12] 1422 	add	a,#_handle_radio_request_payload_4_63
      000642 F5 82            [12] 1423 	mov	dpl,a
      000644 E4               [12] 1424 	clr	a
      000645 34s00            [12] 1425 	addc	a,#(_handle_radio_request_payload_4_63 >> 8)
      000647 F5 83            [12] 1426 	mov	dph,a
      000649 E0               [24] 1427 	movx	a,@dptr
      00064A FB               [12] 1428 	mov	r3,a
      00064B D0 01            [24] 1429 	pop	ar1
      00064D D0 00            [24] 1430 	pop	ar0
      00064F 30 E7 0C         [24] 1431 	jnb	acc.7,00112$
      000652 90r00r30         [24] 1432 	mov	dptr,#_handle_radio_request_crc_given_4_63
      000655 E5*05            [12] 1433 	mov	a,_handle_radio_request_sloc0_1_0
      000657 F0               [24] 1434 	movx	@dptr,a
      000658 74 01            [12] 1435 	mov	a,#0x01
      00065A 45*06            [12] 1436 	orl	a,(_handle_radio_request_sloc0_1_0 + 1)
      00065C A3               [24] 1437 	inc	dptr
      00065D F0               [24] 1438 	movx	@dptr,a
      00065E                       1439 00112$:
                                   1440 ;	src/radio.c:239: crc = 0xFFFF;
      00065E 90r00r2E         [24] 1441 	mov	dptr,#_handle_radio_request_crc_4_63
      000661 74 FF            [12] 1442 	mov	a,#0xFF
      000663 F0               [24] 1443 	movx	@dptr,a
      000664 A3               [24] 1444 	inc	dptr
      000665 F0               [24] 1445 	movx	@dptr,a
                                   1446 ;	src/radio.c:240: for(x = 0; x < 6 + payload_length; x++) crc = crc_update(crc, payload[x], 8);
      000666 74 06            [12] 1447 	mov	a,#0x06
      000668 28               [12] 1448 	add	a,r0
      000669 FA               [12] 1449 	mov	r2,a
      00066A E4               [12] 1450 	clr	a
      00066B 39               [12] 1451 	addc	a,r1
      00066C FB               [12] 1452 	mov	r3,a
      00066D E4               [12] 1453 	clr	a
      00066E F5*05            [12] 1454 	mov	_handle_radio_request_sloc0_1_0,a
      000670 F5*06            [12] 1455 	mov	(_handle_radio_request_sloc0_1_0 + 1),a
      000672                       1456 00176$:
      000672 C3               [12] 1457 	clr	c
      000673 E5*05            [12] 1458 	mov	a,_handle_radio_request_sloc0_1_0
      000675 9A               [12] 1459 	subb	a,r2
      000676 E5*06            [12] 1460 	mov	a,(_handle_radio_request_sloc0_1_0 + 1)
      000678 64 80            [12] 1461 	xrl	a,#0x80
      00067A 8B F0            [24] 1462 	mov	b,r3
      00067C 63 F0 80         [24] 1463 	xrl	b,#0x80
      00067F 95 F0            [12] 1464 	subb	a,b
      000681 50 59            [24] 1465 	jnc	00113$
      000683 C0 00            [24] 1466 	push	ar0
      000685 C0 01            [24] 1467 	push	ar1
      000687 90r00r2E         [24] 1468 	mov	dptr,#_handle_radio_request_crc_4_63
      00068A E0               [24] 1469 	movx	a,@dptr
      00068B F8               [12] 1470 	mov	r0,a
      00068C A3               [24] 1471 	inc	dptr
      00068D E0               [24] 1472 	movx	a,@dptr
      00068E F9               [12] 1473 	mov	r1,a
      00068F E5*05            [12] 1474 	mov	a,_handle_radio_request_sloc0_1_0
      000691 24r32            [12] 1475 	add	a,#_handle_radio_request_payload_4_63
      000693 F5 82            [12] 1476 	mov	dpl,a
      000695 E5*06            [12] 1477 	mov	a,(_handle_radio_request_sloc0_1_0 + 1)
      000697 34s00            [12] 1478 	addc	a,#(_handle_radio_request_payload_4_63 >> 8)
      000699 F5 83            [12] 1479 	mov	dph,a
      00069B E0               [24] 1480 	movx	a,@dptr
      00069C 90r00r25         [24] 1481 	mov	dptr,#_crc_update_PARM_2
      00069F F0               [24] 1482 	movx	@dptr,a
      0006A0 90r00r26         [24] 1483 	mov	dptr,#_crc_update_PARM_3
      0006A3 74 08            [12] 1484 	mov	a,#0x08
      0006A5 F0               [24] 1485 	movx	@dptr,a
      0006A6 88 82            [24] 1486 	mov	dpl,r0
      0006A8 89 83            [24] 1487 	mov	dph,r1
      0006AA C0 04            [24] 1488 	push	ar4
      0006AC C0 03            [24] 1489 	push	ar3
      0006AE C0 02            [24] 1490 	push	ar2
      0006B0 C0 01            [24] 1491 	push	ar1
      0006B2 C0 00            [24] 1492 	push	ar0
      0006B4 12r03r0A         [24] 1493 	lcall	_crc_update
      0006B7 E5 82            [12] 1494 	mov	a,dpl
      0006B9 85 83 F0         [24] 1495 	mov	b,dph
      0006BC D0 00            [24] 1496 	pop	ar0
      0006BE D0 01            [24] 1497 	pop	ar1
      0006C0 D0 02            [24] 1498 	pop	ar2
      0006C2 D0 03            [24] 1499 	pop	ar3
      0006C4 D0 04            [24] 1500 	pop	ar4
      0006C6 90r00r2E         [24] 1501 	mov	dptr,#_handle_radio_request_crc_4_63
      0006C9 F0               [24] 1502 	movx	@dptr,a
      0006CA E5 F0            [12] 1503 	mov	a,b
      0006CC A3               [24] 1504 	inc	dptr
      0006CD F0               [24] 1505 	movx	@dptr,a
      0006CE 05*05            [12] 1506 	inc	_handle_radio_request_sloc0_1_0
      0006D0 E4               [12] 1507 	clr	a
      0006D1 B5*05 02         [24] 1508 	cjne	a,_handle_radio_request_sloc0_1_0,00320$
      0006D4 05*06            [12] 1509 	inc	(_handle_radio_request_sloc0_1_0 + 1)
      0006D6                       1510 00320$:
      0006D6 D0 01            [24] 1511 	pop	ar1
      0006D8 D0 00            [24] 1512 	pop	ar0
      0006DA 80 96            [24] 1513 	sjmp	00176$
      0006DC                       1514 00113$:
                                   1515 ;	src/radio.c:241: crc = crc_update(crc, payload[6 + payload_length] & 0x80, 1);
      0006DC 90r00r2E         [24] 1516 	mov	dptr,#_handle_radio_request_crc_4_63
      0006DF E0               [24] 1517 	movx	a,@dptr
      0006E0 FD               [12] 1518 	mov	r5,a
      0006E1 A3               [24] 1519 	inc	dptr
      0006E2 E0               [24] 1520 	movx	a,@dptr
      0006E3 FE               [12] 1521 	mov	r6,a
      0006E4 74 06            [12] 1522 	mov	a,#0x06
      0006E6 2C               [12] 1523 	add	a,r4
      0006E7 24r32            [12] 1524 	add	a,#_handle_radio_request_payload_4_63
      0006E9 F5 82            [12] 1525 	mov	dpl,a
      0006EB E4               [12] 1526 	clr	a
      0006EC 34s00            [12] 1527 	addc	a,#(_handle_radio_request_payload_4_63 >> 8)
      0006EE F5 83            [12] 1528 	mov	dph,a
      0006F0 E0               [24] 1529 	movx	a,@dptr
      0006F1 FB               [12] 1530 	mov	r3,a
      0006F2 90r00r25         [24] 1531 	mov	dptr,#_crc_update_PARM_2
      0006F5 74 80            [12] 1532 	mov	a,#0x80
      0006F7 5B               [12] 1533 	anl	a,r3
      0006F8 F0               [24] 1534 	movx	@dptr,a
      0006F9 90r00r26         [24] 1535 	mov	dptr,#_crc_update_PARM_3
      0006FC 74 01            [12] 1536 	mov	a,#0x01
      0006FE F0               [24] 1537 	movx	@dptr,a
      0006FF 8D 82            [24] 1538 	mov	dpl,r5
      000701 8E 83            [24] 1539 	mov	dph,r6
      000703 C0 04            [24] 1540 	push	ar4
      000705 C0 01            [24] 1541 	push	ar1
      000707 C0 00            [24] 1542 	push	ar0
      000709 12r03r0A         [24] 1543 	lcall	_crc_update
      00070C AD 82            [24] 1544 	mov	r5,dpl
      00070E AE 83            [24] 1545 	mov	r6,dph
      000710 D0 00            [24] 1546 	pop	ar0
      000712 D0 01            [24] 1547 	pop	ar1
      000714 D0 04            [24] 1548 	pop	ar4
                                   1549 ;	src/radio.c:242: crc = (crc << 8) | (crc >> 8);
      000716 ED               [12] 1550 	mov	a,r5
      000717 8E 05            [24] 1551 	mov	ar5,r6
      000719 FE               [12] 1552 	mov	r6,a
                                   1553 ;	src/radio.c:245: if(crc == crc_given)
      00071A 90r00r30         [24] 1554 	mov	dptr,#_handle_radio_request_crc_given_4_63
      00071D E0               [24] 1555 	movx	a,@dptr
      00071E FA               [12] 1556 	mov	r2,a
      00071F A3               [24] 1557 	inc	dptr
      000720 E0               [24] 1558 	movx	a,@dptr
      000721 FB               [12] 1559 	mov	r3,a
      000722 ED               [12] 1560 	mov	a,r5
      000723 B5 02 06         [24] 1561 	cjne	a,ar2,00321$
      000726 EE               [12] 1562 	mov	a,r6
      000727 B5 03 02         [24] 1563 	cjne	a,ar3,00321$
      00072A 80 03            [24] 1564 	sjmp	00322$
      00072C                       1565 00321$:
      00072C 02r07rC0         [24] 1566 	ljmp	00182$
      00072F                       1567 00322$:
                                   1568 ;	src/radio.c:248: memcpy(in1buf, payload, 5);
      00072F 90r00r00         [24] 1569 	mov	dptr,#_memcpy_PARM_2
      000732 74r32            [12] 1570 	mov	a,#_handle_radio_request_payload_4_63
      000734 F0               [24] 1571 	movx	@dptr,a
      000735 74s00            [12] 1572 	mov	a,#(_handle_radio_request_payload_4_63 >> 8)
      000737 A3               [24] 1573 	inc	dptr
      000738 F0               [24] 1574 	movx	@dptr,a
      000739 E4               [12] 1575 	clr	a
      00073A A3               [24] 1576 	inc	dptr
      00073B F0               [24] 1577 	movx	@dptr,a
      00073C 90r00r00         [24] 1578 	mov	dptr,#_memcpy_PARM_3
      00073F 74 05            [12] 1579 	mov	a,#0x05
      000741 F0               [24] 1580 	movx	@dptr,a
      000742 E4               [12] 1581 	clr	a
      000743 A3               [24] 1582 	inc	dptr
      000744 F0               [24] 1583 	movx	@dptr,a
      000745 90 C6 80         [24] 1584 	mov	dptr,#_in1buf
      000748 75 F0 00         [24] 1585 	mov	b,#0x00
      00074B C0 04            [24] 1586 	push	ar4
      00074D C0 01            [24] 1587 	push	ar1
      00074F C0 00            [24] 1588 	push	ar0
      000751 12r00r00         [24] 1589 	lcall	_memcpy
      000754 D0 00            [24] 1590 	pop	ar0
      000756 D0 01            [24] 1591 	pop	ar1
      000758 D0 04            [24] 1592 	pop	ar4
                                   1593 ;	src/radio.c:251: for(x = 0; x < payload_length + 3; x++)
      00075A 74 03            [12] 1594 	mov	a,#0x03
      00075C 28               [12] 1595 	add	a,r0
      00075D FD               [12] 1596 	mov	r5,a
      00075E E4               [12] 1597 	clr	a
      00075F 39               [12] 1598 	addc	a,r1
      000760 FE               [12] 1599 	mov	r6,a
      000761 7A 00            [12] 1600 	mov	r2,#0x00
      000763 7B 00            [12] 1601 	mov	r3,#0x00
      000765                       1602 00179$:
      000765 C3               [12] 1603 	clr	c
      000766 EA               [12] 1604 	mov	a,r2
      000767 9D               [12] 1605 	subb	a,r5
      000768 EB               [12] 1606 	mov	a,r3
      000769 64 80            [12] 1607 	xrl	a,#0x80
      00076B 8E F0            [24] 1608 	mov	b,r6
      00076D 63 F0 80         [24] 1609 	xrl	b,#0x80
      000770 95 F0            [12] 1610 	subb	a,b
      000772 50 44            [24] 1611 	jnc	00114$
                                   1612 ;	src/radio.c:252: in1buf[5+x] = ((payload[6 + x] << 1) & 0xFF) | (payload[7 + x] >> 7);
      000774 C0 05            [24] 1613 	push	ar5
      000776 C0 06            [24] 1614 	push	ar6
      000778 8A 01            [24] 1615 	mov	ar1,r2
      00077A 74 05            [12] 1616 	mov	a,#0x05
      00077C 29               [12] 1617 	add	a,r1
      00077D 24 80            [12] 1618 	add	a,#_in1buf
      00077F F8               [12] 1619 	mov	r0,a
      000780 E4               [12] 1620 	clr	a
      000781 34 C6            [12] 1621 	addc	a,#(_in1buf >> 8)
      000783 FE               [12] 1622 	mov	r6,a
      000784 74 06            [12] 1623 	mov	a,#0x06
      000786 29               [12] 1624 	add	a,r1
      000787 24r32            [12] 1625 	add	a,#_handle_radio_request_payload_4_63
      000789 F5 82            [12] 1626 	mov	dpl,a
      00078B E4               [12] 1627 	clr	a
      00078C 34s00            [12] 1628 	addc	a,#(_handle_radio_request_payload_4_63 >> 8)
      00078E F5 83            [12] 1629 	mov	dph,a
      000790 E0               [24] 1630 	movx	a,@dptr
      000791 25 E0            [12] 1631 	add	a,acc
      000793 FD               [12] 1632 	mov	r5,a
      000794 74 07            [12] 1633 	mov	a,#0x07
      000796 29               [12] 1634 	add	a,r1
      000797 24r32            [12] 1635 	add	a,#_handle_radio_request_payload_4_63
      000799 F5 82            [12] 1636 	mov	dpl,a
      00079B E4               [12] 1637 	clr	a
      00079C 34s00            [12] 1638 	addc	a,#(_handle_radio_request_payload_4_63 >> 8)
      00079E F5 83            [12] 1639 	mov	dph,a
      0007A0 E0               [24] 1640 	movx	a,@dptr
      0007A1 23               [12] 1641 	rl	a
      0007A2 54 01            [12] 1642 	anl	a,#0x01
      0007A4 F9               [12] 1643 	mov	r1,a
      0007A5 42 05            [12] 1644 	orl	ar5,a
      0007A7 88 82            [24] 1645 	mov	dpl,r0
      0007A9 8E 83            [24] 1646 	mov	dph,r6
      0007AB ED               [12] 1647 	mov	a,r5
      0007AC F0               [24] 1648 	movx	@dptr,a
                                   1649 ;	src/radio.c:251: for(x = 0; x < payload_length + 3; x++)
      0007AD 0A               [12] 1650 	inc	r2
      0007AE BA 00 01         [24] 1651 	cjne	r2,#0x00,00324$
      0007B1 0B               [12] 1652 	inc	r3
      0007B2                       1653 00324$:
      0007B2 D0 06            [24] 1654 	pop	ar6
      0007B4 D0 05            [24] 1655 	pop	ar5
      0007B6 80 AD            [24] 1656 	sjmp	00179$
      0007B8                       1657 00114$:
                                   1658 ;	src/radio.c:253: in1bc = 5 + payload_length;
      0007B8 74 05            [12] 1659 	mov	a,#0x05
      0007BA 2C               [12] 1660 	add	a,r4
      0007BB 90 C7 B7         [24] 1661 	mov	dptr,#0xC7B7
      0007BE F0               [24] 1662 	movx	@dptr,a
                                   1663 ;	src/radio.c:254: return;
      0007BF 22               [24] 1664 	ret
      0007C0                       1665 00182$:
                                   1666 ;	src/radio.c:213: for(offset = 0; offset < 2; offset++)
      0007C0 05*07            [12] 1667 	inc	_handle_radio_request_sloc1_1_0
      0007C2 E4               [12] 1668 	clr	a
      0007C3 B5*07 02         [24] 1669 	cjne	a,_handle_radio_request_sloc1_1_0,00325$
      0007C6 05*08            [12] 1670 	inc	(_handle_radio_request_sloc1_1_0 + 1)
      0007C8                       1671 00325$:
      0007C8 C3               [12] 1672 	clr	c
      0007C9 E5*07            [12] 1673 	mov	a,_handle_radio_request_sloc1_1_0
      0007CB 94 02            [12] 1674 	subb	a,#0x02
      0007CD E5*08            [12] 1675 	mov	a,(_handle_radio_request_sloc1_1_0 + 1)
      0007CF 64 80            [12] 1676 	xrl	a,#0x80
      0007D1 94 80            [12] 1677 	subb	a,#0x80
      0007D3 50 03            [24] 1678 	jnc	00326$
      0007D5 02r05r67         [24] 1679 	ljmp	00181$
      0007D8                       1680 00326$:
      0007D8                       1681 00124$:
                                   1682 ;	src/radio.c:262: in1bc = 1;
      0007D8 90 C7 B7         [24] 1683 	mov	dptr,#0xC7B7
      0007DB 74 01            [12] 1684 	mov	a,#0x01
      0007DD F0               [24] 1685 	movx	@dptr,a
                                   1686 ;	src/radio.c:263: in1buf[0] = 0xFF;
      0007DE 90 C6 80         [24] 1687 	mov	dptr,#_in1buf
      0007E1 74 FF            [12] 1688 	mov	a,#0xFF
      0007E3 F0               [24] 1689 	movx	@dptr,a
                                   1690 ;	src/radio.c:264: return;
      0007E4 22               [24] 1691 	ret
      0007E5                       1692 00149$:
                                   1693 ;	src/radio.c:268: else if(request == ENTER_SNIFFER_MODE)
      0007E5 BF 05 02         [24] 1694 	cjne	r7,#0x05,00327$
      0007E8 80 03            [24] 1695 	sjmp	00328$
      0007EA                       1696 00327$:
      0007EA 02r08rA1         [24] 1697 	ljmp	00146$
      0007ED                       1698 00328$:
                                   1699 ;	src/radio.c:270: in_pm = false;
      0007ED 90r00r00         [24] 1700 	mov	dptr,#_in_pm
      0007F0 E4               [12] 1701 	clr	a
      0007F1 F0               [24] 1702 	movx	@dptr,a
                                   1703 ;	src/radio.c:273: if(data[0] > 5) data[0] = 5;
      0007F2 90r00r29         [24] 1704 	mov	dptr,#_handle_radio_request_PARM_2
      0007F5 E0               [24] 1705 	movx	a,@dptr
      0007F6 FC               [12] 1706 	mov	r4,a
      0007F7 A3               [24] 1707 	inc	dptr
      0007F8 E0               [24] 1708 	movx	a,@dptr
      0007F9 FD               [12] 1709 	mov	r5,a
      0007FA A3               [24] 1710 	inc	dptr
      0007FB E0               [24] 1711 	movx	a,@dptr
      0007FC FE               [12] 1712 	mov	r6,a
      0007FD 8C 82            [24] 1713 	mov	dpl,r4
      0007FF 8D 83            [24] 1714 	mov	dph,r5
      000801 8E F0            [24] 1715 	mov	b,r6
      000803 12r00r00         [24] 1716 	lcall	__gptrget
      000806 FB               [12] 1717 	mov  r3,a
      000807 24 FA            [12] 1718 	add	a,#0xff - 0x05
      000809 50 0B            [24] 1719 	jnc	00126$
      00080B 8C 82            [24] 1720 	mov	dpl,r4
      00080D 8D 83            [24] 1721 	mov	dph,r5
      00080F 8E F0            [24] 1722 	mov	b,r6
      000811 74 05            [12] 1723 	mov	a,#0x05
      000813 12r00r00         [24] 1724 	lcall	__gptrput
      000816                       1725 00126$:
                                   1726 ;	src/radio.c:274: if(data[0] < 2) data[0] = 2;
      000816 8C 82            [24] 1727 	mov	dpl,r4
      000818 8D 83            [24] 1728 	mov	dph,r5
      00081A 8E F0            [24] 1729 	mov	b,r6
      00081C 12r00r00         [24] 1730 	lcall	__gptrget
      00081F FB               [12] 1731 	mov	r3,a
      000820 BB 02 00         [24] 1732 	cjne	r3,#0x02,00330$
      000823                       1733 00330$:
      000823 50 0B            [24] 1734 	jnc	00128$
      000825 8C 82            [24] 1735 	mov	dpl,r4
      000827 8D 83            [24] 1736 	mov	dph,r5
      000829 8E F0            [24] 1737 	mov	b,r6
      00082B 74 02            [12] 1738 	mov	a,#0x02
      00082D 12r00r00         [24] 1739 	lcall	__gptrput
      000830                       1740 00128$:
                                   1741 ;	src/radio.c:277: rfce = 0;
      000830 C2 90            [12] 1742 	clr	_rfce
                                   1743 ;	src/radio.c:280: configure_address(&data[1], data[0]);
      000832 74 01            [12] 1744 	mov	a,#0x01
      000834 2C               [12] 1745 	add	a,r4
      000835 F9               [12] 1746 	mov	r1,a
      000836 E4               [12] 1747 	clr	a
      000837 3D               [12] 1748 	addc	a,r5
      000838 FA               [12] 1749 	mov	r2,a
      000839 8E 03            [24] 1750 	mov	ar3,r6
      00083B 8C 82            [24] 1751 	mov	dpl,r4
      00083D 8D 83            [24] 1752 	mov	dph,r5
      00083F 8E F0            [24] 1753 	mov	b,r6
      000841 12r00r00         [24] 1754 	lcall	__gptrget
      000844 90r00r0E         [24] 1755 	mov	dptr,#_configure_address_PARM_2
      000847 F0               [24] 1756 	movx	@dptr,a
      000848 89 82            [24] 1757 	mov	dpl,r1
      00084A 8A 83            [24] 1758 	mov	dph,r2
      00084C 8B F0            [24] 1759 	mov	b,r3
      00084E 12r01r18         [24] 1760 	lcall	_configure_address
                                   1761 ;	src/radio.c:283: configure_mac(EN_DPL | EN_ACK_PAY, DPL_P0, ENAA_NONE);
      000851 90r00r12         [24] 1762 	mov	dptr,#_configure_mac_PARM_2
      000854 74 01            [12] 1763 	mov	a,#0x01
      000856 F0               [24] 1764 	movx	@dptr,a
      000857 90r00r13         [24] 1765 	mov	dptr,#_configure_mac_PARM_3
      00085A E4               [12] 1766 	clr	a
      00085B F0               [24] 1767 	movx	@dptr,a
      00085C 75 82 06         [24] 1768 	mov	dpl,#0x06
      00085F 12r01r8F         [24] 1769 	lcall	_configure_mac
                                   1770 ;	src/radio.c:286: configure_phy(EN_CRC | CRC0 | PRIM_RX | PWR_UP, RATE_2M, 0);
      000862 90r00r15         [24] 1771 	mov	dptr,#_configure_phy_PARM_2
      000865 74 08            [12] 1772 	mov	a,#0x08
      000867 F0               [24] 1773 	movx	@dptr,a
      000868 90r00r16         [24] 1774 	mov	dptr,#_configure_phy_PARM_3
      00086B E4               [12] 1775 	clr	a
      00086C F0               [24] 1776 	movx	@dptr,a
      00086D 75 82 0F         [24] 1777 	mov	dpl,#0x0F
      000870 12r01rBC         [24] 1778 	lcall	_configure_phy
                                   1779 ;	src/radio.c:289: rfce = 1;
      000873 D2 90            [12] 1780 	setb	_rfce
                                   1781 ;	src/radio.c:292: flush_rx();
      000875 90r00r19         [24] 1782 	mov	dptr,#_spi_write_PARM_2
      000878 E4               [12] 1783 	clr	a
      000879 F0               [24] 1784 	movx	@dptr,a
      00087A A3               [24] 1785 	inc	dptr
      00087B F0               [24] 1786 	movx	@dptr,a
      00087C A3               [24] 1787 	inc	dptr
      00087D F0               [24] 1788 	movx	@dptr,a
      00087E 90r00r1C         [24] 1789 	mov	dptr,#_spi_write_PARM_3
      000881 F0               [24] 1790 	movx	@dptr,a
      000882 75 82 E2         [24] 1791 	mov	dpl,#0xE2
      000885 12r01rFB         [24] 1792 	lcall	_spi_write
                                   1793 ;	src/radio.c:293: flush_tx();
      000888 90r00r19         [24] 1794 	mov	dptr,#_spi_write_PARM_2
      00088B E4               [12] 1795 	clr	a
      00088C F0               [24] 1796 	movx	@dptr,a
      00088D A3               [24] 1797 	inc	dptr
      00088E F0               [24] 1798 	movx	@dptr,a
      00088F A3               [24] 1799 	inc	dptr
      000890 F0               [24] 1800 	movx	@dptr,a
      000891 90r00r1C         [24] 1801 	mov	dptr,#_spi_write_PARM_3
      000894 F0               [24] 1802 	movx	@dptr,a
      000895 75 82 E1         [24] 1803 	mov	dpl,#0xE1
      000898 12r01rFB         [24] 1804 	lcall	_spi_write
                                   1805 ;	src/radio.c:294: in1bc = 0;      
      00089B 90 C7 B7         [24] 1806 	mov	dptr,#0xC7B7
      00089E E4               [12] 1807 	clr	a
      00089F F0               [24] 1808 	movx	@dptr,a
      0008A0 22               [24] 1809 	ret
      0008A1                       1810 00146$:
                                   1811 ;	src/radio.c:298: else if(request == TRANSMIT_PAYLOAD)
      0008A1 BF 04 02         [24] 1812 	cjne	r7,#0x04,00332$
      0008A4 80 01            [24] 1813 	sjmp	00333$
      0008A6                       1814 00332$:
      0008A6 22               [24] 1815 	ret
      0008A7                       1816 00333$:
                                   1817 ;	src/radio.c:301: if(data[0] > 32) data[0] = 32;
      0008A7 90r00r29         [24] 1818 	mov	dptr,#_handle_radio_request_PARM_2
      0008AA E0               [24] 1819 	movx	a,@dptr
      0008AB FD               [12] 1820 	mov	r5,a
      0008AC A3               [24] 1821 	inc	dptr
      0008AD E0               [24] 1822 	movx	a,@dptr
      0008AE FE               [12] 1823 	mov	r6,a
      0008AF A3               [24] 1824 	inc	dptr
      0008B0 E0               [24] 1825 	movx	a,@dptr
      0008B1 FF               [12] 1826 	mov	r7,a
      0008B2 8D 82            [24] 1827 	mov	dpl,r5
      0008B4 8E 83            [24] 1828 	mov	dph,r6
      0008B6 8F F0            [24] 1829 	mov	b,r7
      0008B8 12r00r00         [24] 1830 	lcall	__gptrget
      0008BB FC               [12] 1831 	mov  r4,a
      0008BC 24 DF            [12] 1832 	add	a,#0xff - 0x20
      0008BE 50 0B            [24] 1833 	jnc	00130$
      0008C0 8D 82            [24] 1834 	mov	dpl,r5
      0008C2 8E 83            [24] 1835 	mov	dph,r6
      0008C4 8F F0            [24] 1836 	mov	b,r7
      0008C6 74 20            [12] 1837 	mov	a,#0x20
      0008C8 12r00r00         [24] 1838 	lcall	__gptrput
      0008CB                       1839 00130$:
                                   1840 ;	src/radio.c:302: if(data[0] < 1) data[0] = 1;
      0008CB 8D 82            [24] 1841 	mov	dpl,r5
      0008CD 8E 83            [24] 1842 	mov	dph,r6
      0008CF 8F F0            [24] 1843 	mov	b,r7
      0008D1 12r00r00         [24] 1844 	lcall	__gptrget
      0008D4 FC               [12] 1845 	mov	r4,a
      0008D5 BC 01 00         [24] 1846 	cjne	r4,#0x01,00335$
      0008D8                       1847 00335$:
      0008D8 50 0B            [24] 1848 	jnc	00132$
      0008DA 8D 82            [24] 1849 	mov	dpl,r5
      0008DC 8E 83            [24] 1850 	mov	dph,r6
      0008DE 8F F0            [24] 1851 	mov	b,r7
      0008E0 74 01            [12] 1852 	mov	a,#0x01
      0008E2 12r00r00         [24] 1853 	lcall	__gptrput
      0008E5                       1854 00132$:
                                   1855 ;	src/radio.c:305: rfce = 0;
      0008E5 C2 90            [12] 1856 	clr	_rfce
                                   1857 ;	src/radio.c:309: write_register_byte(SETUP_RETR, (1 << data[1]) | data[2]);
      0008E7 74 01            [12] 1858 	mov	a,#0x01
      0008E9 2D               [12] 1859 	add	a,r5
      0008EA FA               [12] 1860 	mov	r2,a
      0008EB E4               [12] 1861 	clr	a
      0008EC 3E               [12] 1862 	addc	a,r6
      0008ED FB               [12] 1863 	mov	r3,a
      0008EE 8F 04            [24] 1864 	mov	ar4,r7
      0008F0 8A 82            [24] 1865 	mov	dpl,r2
      0008F2 8B 83            [24] 1866 	mov	dph,r3
      0008F4 8C F0            [24] 1867 	mov	b,r4
      0008F6 12r00r00         [24] 1868 	lcall	__gptrget
      0008F9 FA               [12] 1869 	mov	r2,a
      0008FA 8A F0            [24] 1870 	mov	b,r2
      0008FC 05 F0            [12] 1871 	inc	b
      0008FE 74 01            [12] 1872 	mov	a,#0x01
      000900 80 02            [24] 1873 	sjmp	00339$
      000902                       1874 00337$:
      000902 25 E0            [12] 1875 	add	a,acc
      000904                       1876 00339$:
      000904 D5 F0 FB         [24] 1877 	djnz	b,00337$
      000907 FA               [12] 1878 	mov	r2,a
      000908 74 02            [12] 1879 	mov	a,#0x02
      00090A 2D               [12] 1880 	add	a,r5
      00090B F9               [12] 1881 	mov	r1,a
      00090C E4               [12] 1882 	clr	a
      00090D 3E               [12] 1883 	addc	a,r6
      00090E FB               [12] 1884 	mov	r3,a
      00090F 8F 04            [24] 1885 	mov	ar4,r7
      000911 89 82            [24] 1886 	mov	dpl,r1
      000913 8B 83            [24] 1887 	mov	dph,r3
      000915 8C F0            [24] 1888 	mov	b,r4
      000917 12r00r00         [24] 1889 	lcall	__gptrget
      00091A 90r00r23         [24] 1890 	mov	dptr,#_write_register_byte_PARM_2
      00091D 4A               [12] 1891 	orl	a,r2
      00091E F0               [24] 1892 	movx	@dptr,a
      00091F 75 82 04         [24] 1893 	mov	dpl,#0x04
      000922 C0 07            [24] 1894 	push	ar7
      000924 C0 06            [24] 1895 	push	ar6
      000926 C0 05            [24] 1896 	push	ar5
      000928 12r02rE8         [24] 1897 	lcall	_write_register_byte
      00092B D0 05            [24] 1898 	pop	ar5
      00092D D0 06            [24] 1899 	pop	ar6
      00092F D0 07            [24] 1900 	pop	ar7
                                   1901 ;	src/radio.c:312: flush_tx();
      000931 90r00r19         [24] 1902 	mov	dptr,#_spi_write_PARM_2
      000934 E4               [12] 1903 	clr	a
      000935 F0               [24] 1904 	movx	@dptr,a
      000936 A3               [24] 1905 	inc	dptr
      000937 F0               [24] 1906 	movx	@dptr,a
      000938 A3               [24] 1907 	inc	dptr
      000939 F0               [24] 1908 	movx	@dptr,a
      00093A 90r00r1C         [24] 1909 	mov	dptr,#_spi_write_PARM_3
      00093D F0               [24] 1910 	movx	@dptr,a
      00093E 75 82 E1         [24] 1911 	mov	dpl,#0xE1
      000941 C0 07            [24] 1912 	push	ar7
      000943 C0 06            [24] 1913 	push	ar6
      000945 C0 05            [24] 1914 	push	ar5
      000947 12r01rFB         [24] 1915 	lcall	_spi_write
      00094A D0 05            [24] 1916 	pop	ar5
      00094C D0 06            [24] 1917 	pop	ar6
      00094E D0 07            [24] 1918 	pop	ar7
                                   1919 ;	src/radio.c:313: flush_rx();     
      000950 90r00r19         [24] 1920 	mov	dptr,#_spi_write_PARM_2
      000953 E4               [12] 1921 	clr	a
      000954 F0               [24] 1922 	movx	@dptr,a
      000955 A3               [24] 1923 	inc	dptr
      000956 F0               [24] 1924 	movx	@dptr,a
      000957 A3               [24] 1925 	inc	dptr
      000958 F0               [24] 1926 	movx	@dptr,a
      000959 90r00r1C         [24] 1927 	mov	dptr,#_spi_write_PARM_3
      00095C F0               [24] 1928 	movx	@dptr,a
      00095D 75 82 E2         [24] 1929 	mov	dpl,#0xE2
      000960 C0 07            [24] 1930 	push	ar7
      000962 C0 06            [24] 1931 	push	ar6
      000964 C0 05            [24] 1932 	push	ar5
      000966 12r01rFB         [24] 1933 	lcall	_spi_write
                                   1934 ;	src/radio.c:316: write_register_byte(STATUS, MAX_RT | TX_DS | RX_DR);
      000969 90r00r23         [24] 1935 	mov	dptr,#_write_register_byte_PARM_2
      00096C 74 70            [12] 1936 	mov	a,#0x70
      00096E F0               [24] 1937 	movx	@dptr,a
      00096F 75 82 07         [24] 1938 	mov	dpl,#0x07
      000972 12r02rE8         [24] 1939 	lcall	_write_register_byte
                                   1940 ;	src/radio.c:319: write_register_byte(CONFIG, PWR_UP | EN_CRC | CRC0); 
      000975 90r00r23         [24] 1941 	mov	dptr,#_write_register_byte_PARM_2
      000978 74 0E            [12] 1942 	mov	a,#0x0E
      00097A F0               [24] 1943 	movx	@dptr,a
      00097B 75 82 00         [24] 1944 	mov	dpl,#0x00
      00097E 12r02rE8         [24] 1945 	lcall	_write_register_byte
                                   1946 ;	src/radio.c:322: write_register_byte(FEATURE, EN_DPL | EN_DYN_ACK | EN_ACK_PAY);
      000981 90r00r23         [24] 1947 	mov	dptr,#_write_register_byte_PARM_2
      000984 74 07            [12] 1948 	mov	a,#0x07
      000986 F0               [24] 1949 	movx	@dptr,a
      000987 75 82 1D         [24] 1950 	mov	dpl,#0x1D
      00098A 12r02rE8         [24] 1951 	lcall	_write_register_byte
                                   1952 ;	src/radio.c:323: write_register_byte(EN_AA, ENAA_P0);
      00098D 90r00r23         [24] 1953 	mov	dptr,#_write_register_byte_PARM_2
      000990 74 01            [12] 1954 	mov	a,#0x01
      000992 F0               [24] 1955 	movx	@dptr,a
      000993 75 82 01         [24] 1956 	mov	dpl,#0x01
      000996 12r02rE8         [24] 1957 	lcall	_write_register_byte
      000999 D0 05            [24] 1958 	pop	ar5
      00099B D0 06            [24] 1959 	pop	ar6
      00099D D0 07            [24] 1960 	pop	ar7
                                   1961 ;	src/radio.c:326: spi_write(W_TX_PAYLOAD, &data[3], data[0]);
      00099F 74 03            [12] 1962 	mov	a,#0x03
      0009A1 2D               [12] 1963 	add	a,r5
      0009A2 FA               [12] 1964 	mov	r2,a
      0009A3 E4               [12] 1965 	clr	a
      0009A4 3E               [12] 1966 	addc	a,r6
      0009A5 FB               [12] 1967 	mov	r3,a
      0009A6 8F 04            [24] 1968 	mov	ar4,r7
      0009A8 8D 82            [24] 1969 	mov	dpl,r5
      0009AA 8E 83            [24] 1970 	mov	dph,r6
      0009AC 8F F0            [24] 1971 	mov	b,r7
      0009AE 12r00r00         [24] 1972 	lcall	__gptrget
      0009B1 FD               [12] 1973 	mov	r5,a
      0009B2 90r00r19         [24] 1974 	mov	dptr,#_spi_write_PARM_2
      0009B5 EA               [12] 1975 	mov	a,r2
      0009B6 F0               [24] 1976 	movx	@dptr,a
      0009B7 EB               [12] 1977 	mov	a,r3
      0009B8 A3               [24] 1978 	inc	dptr
      0009B9 F0               [24] 1979 	movx	@dptr,a
      0009BA EC               [12] 1980 	mov	a,r4
      0009BB A3               [24] 1981 	inc	dptr
      0009BC F0               [24] 1982 	movx	@dptr,a
      0009BD 90r00r1C         [24] 1983 	mov	dptr,#_spi_write_PARM_3
      0009C0 ED               [12] 1984 	mov	a,r5
      0009C1 F0               [24] 1985 	movx	@dptr,a
      0009C2 75 82 A0         [24] 1986 	mov	dpl,#0xA0
      0009C5 12r01rFB         [24] 1987 	lcall	_spi_write
                                   1988 ;	src/radio.c:329: rfce = 1;
      0009C8 D2 90            [12] 1989 	setb	_rfce
                                   1990 ;	src/nRF24LU1P.h:35: inline void delay_us(uint16_t us) { do nop_us(); while(--us); }
      0009CA 7E 19            [12] 1991 	mov	r6,#0x19
      0009CC 7F 00            [12] 1992 	mov	r7,#0x00
      0009CE                       1993 00166$:
      0009CE 00               [12] 1994 	nop 
      0009CF 00               [12] 1995 	nop 
      0009D0 00               [12] 1996 	nop 
      0009D1 00               [12] 1997 	nop 
      0009D2 1E               [12] 1998 	dec	r6
      0009D3 BE FF 01         [24] 1999 	cjne	r6,#0xFF,00340$
      0009D6 1F               [12] 2000 	dec	r7
      0009D7                       2001 00340$:
      0009D7 EE               [12] 2002 	mov	a,r6
      0009D8 4F               [12] 2003 	orl	a,r7
      0009D9 70 F3            [24] 2004 	jnz	00166$
                                   2005 ;	src/radio.c:331: rfce = 0;      
      0009DB C2 90            [12] 2006 	clr	_rfce
                                   2007 ;	src/radio.c:334: while(true)
      0009DD                       2008 00141$:
                                   2009 ;	src/radio.c:337: rfcsn = 0;
      0009DD C2 91            [12] 2010 	clr	_rfcsn
                                   2011 ;	src/radio.c:338: RFDAT = _NOP;
      0009DF 75 E5 FF         [24] 2012 	mov	_RFDAT,#0xFF
                                   2013 ;	src/radio.c:339: RFRDY = 0;
      0009E2 C2 C0            [12] 2014 	clr	_RFRDY
                                   2015 ;	src/radio.c:340: while(!RFRDY);
      0009E4                       2016 00133$:
      0009E4 30 C0 FD         [24] 2017 	jnb	_RFRDY,00133$
                                   2018 ;	src/radio.c:341: rfcsn = 1;
      0009E7 D2 91            [12] 2019 	setb	_rfcsn
                                   2020 ;	src/radio.c:344: if((RFDAT & 0x10) == 0x10)  
      0009E9 74 10            [12] 2021 	mov	a,#0x10
      0009EB 55 E5            [12] 2022 	anl	a,_RFDAT
      0009ED FF               [12] 2023 	mov	r7,a
      0009EE BF 10 07         [24] 2024 	cjne	r7,#0x10,00137$
                                   2025 ;	src/radio.c:346: in1buf[0] = 0;
      0009F1 90 C6 80         [24] 2026 	mov	dptr,#_in1buf
      0009F4 E4               [12] 2027 	clr	a
      0009F5 F0               [24] 2028 	movx	@dptr,a
                                   2029 ;	src/radio.c:347: break;
      0009F6 80 0E            [24] 2030 	sjmp	00142$
      0009F8                       2031 00137$:
                                   2032 ;	src/radio.c:351: if((RFDAT & 0x20) == 0x20)
      0009F8 74 20            [12] 2033 	mov	a,#0x20
      0009FA 55 E5            [12] 2034 	anl	a,_RFDAT
      0009FC FF               [12] 2035 	mov	r7,a
      0009FD BF 20 DD         [24] 2036 	cjne	r7,#0x20,00141$
                                   2037 ;	src/radio.c:353: in1buf[0] = 1;
      000A00 90 C6 80         [24] 2038 	mov	dptr,#_in1buf
      000A03 74 01            [12] 2039 	mov	a,#0x01
      000A05 F0               [24] 2040 	movx	@dptr,a
                                   2041 ;	src/radio.c:354: break;
      000A06                       2042 00142$:
                                   2043 ;	src/radio.c:359: write_register_byte(FEATURE, EN_DPL | EN_ACK_PAY);
      000A06 90r00r23         [24] 2044 	mov	dptr,#_write_register_byte_PARM_2
      000A09 74 06            [12] 2045 	mov	a,#0x06
      000A0B F0               [24] 2046 	movx	@dptr,a
      000A0C 75 82 1D         [24] 2047 	mov	dpl,#0x1D
      000A0F 12r02rE8         [24] 2048 	lcall	_write_register_byte
                                   2049 ;	src/radio.c:360: write_register_byte(EN_AA, ENAA_NONE);  
      000A12 90r00r23         [24] 2050 	mov	dptr,#_write_register_byte_PARM_2
      000A15 E4               [12] 2051 	clr	a
      000A16 F0               [24] 2052 	movx	@dptr,a
      000A17 75 82 01         [24] 2053 	mov	dpl,#0x01
      000A1A 12r02rE8         [24] 2054 	lcall	_write_register_byte
                                   2055 ;	src/radio.c:363: write_register_byte(CONFIG, PWR_UP | EN_CRC | CRC0 | PRIM_RX);  
      000A1D 90r00r23         [24] 2056 	mov	dptr,#_write_register_byte_PARM_2
      000A20 74 0F            [12] 2057 	mov	a,#0x0F
      000A22 F0               [24] 2058 	movx	@dptr,a
      000A23 75 82 00         [24] 2059 	mov	dpl,#0x00
      000A26 12r02rE8         [24] 2060 	lcall	_write_register_byte
                                   2061 ;	src/radio.c:366: rfce = 1;
      000A29 D2 90            [12] 2062 	setb	_rfce
                                   2063 ;	src/radio.c:367: in1bc = 1;   
      000A2B 90 C7 B7         [24] 2064 	mov	dptr,#0xC7B7
      000A2E 74 01            [12] 2065 	mov	a,#0x01
      000A30 F0               [24] 2066 	movx	@dptr,a
      000A31 22               [24] 2067 	ret
                                   2068 	.area CSEG    (CODE)
                                   2069 	.area CONST   (CODE)
                                   2070 	.area XINIT   (CODE)
      000000                       2071 __xinit__bootloader:
      000000 00 78                 2072 	.byte #0x00,#0x78
      000002                       2073 __xinit__promiscuous_address:
      000002 AA                    2074 	.db #0xAA	; 170
      000003 00                    2075 	.db #0x00	; 0
                                   2076 	.area CABS    (ABS,CODE)
